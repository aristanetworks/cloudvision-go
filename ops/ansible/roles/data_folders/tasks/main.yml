
---

- name: Check if we need to make /dataX folders immutables
  stat:
    path: "{{ ansible_env.HOME }}/.data_immutable"
  register: need_data_immutable

- block:
    # We want to freeze the /dataX dirs on the root partition, so in the
    # case of mounting the data drive fails, services do not start to write in a
    # /dataX folder in the root partition and fill up the root drive.
    # In order to do so, we need to access the root "/" partition, so
    # we bind mount it on /mnt/root, create the /dataX folders and freeze them
    # using chattr +i (immutable) attribute.
    - name: Create mountpoint to mount root partition
      become: True
      file:
        path: /mnt/root
        state: directory

    - name: Check if mountpoint created
      command: mountpoint -q /mnt/root
      register: ismounted
      ignore_errors: True

    - name: Mount / to /mnt/root so we can disable the /data* dirs later
      become: True
      command: mount -o bind / /mnt/root
      when: ismounted.rc != 0

    - name: Create /data* folder in the root partition
      become: True
      file:
        path: "/mnt/root{{ item }}"
        state: directory
      with_items:
        - /data2
        - /data3
        - /data4
        - /data5
        - /data6
        - /data7
        - /data8

    # Before making the folder immutable, I check if there is any file.
    # If so, I fail, because that means a service is or has used this folder
    # so manual intervention is needed in order to move/trash the data
    # and rerun the process
    - name: Freeze /data* folder in the root partition
      become: True
      shell: '[ "$(ls -A /mnt/root{{ item }})" ] && exit 1 || chattr +i /mnt/root{{item}}'
      with_items:
        - /data2
        - /data3
        - /data4
        - /data5
        - /data6
        - /data7
        - /data8

    - name: Mark this process as done
      shell: touch $HOME/.data_immutable
      args:
        creates: $HOME/.data_immutable
  always:
    - name: Unmount /mnt/root
      become: True
      command: umount /mnt/root
      ignore_errors: true
  when: need_data_immutable.stat.exists == False
# End of the block

- name: Create kafka data directory
  become: True
  file:
    path: "/data3/kafka-data"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: K8S_WORKER
  ignore_errors: True

- name: Create elastic search data directory
  become: True
  file:
    path: "/data4/es-data"
    state: directory
    owner: 1000
    group: 1000
    mode: 0755
  when: K8S_WORKER
  ignore_errors: True

- name: Create cvpbs jenkins slave workspace directory
  become: True
  file:
    path: "/data2/cvpbs/{{ item }}"
  with_items:
    - workspace
    - rpmbuild
  when: K8S_WORKER
  ignore_errors: True

- name: Create hadoop data directory
  become: True
  file:
    path: "{{ item }}/dfs"
    state: directory
    owner: 1000
    group: 1000
    mode: 0755
  when: HADOOP
  with_items:
    - /data1
    - /data2
    - /data3
    - /data4
    - /data5
    - /data6
    - /data7
    - /data8
  ignore_errors: True

- name: Create prometheus data directory
  become: True
  file:
    path: "/data5/prom-data"
    state: directory
    owner: 1000
    group: 1000
    mode: 0755
  when: K8S_WORKER
  ignore_errors: True

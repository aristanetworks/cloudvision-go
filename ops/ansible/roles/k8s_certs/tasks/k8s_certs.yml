
---

- name: create folder dir for k8s certs
  file:
    path: "{{ inventory_dir }}/files/k8s"
    state: directory

- name: Create k8s ca-csr.json file
  copy:
    content: |
      {
        "CN": "Autogenerated CA",
        "key": {
          "algo": "ecdsa",
          "size": 384
        },
        "names": [
          {
            "O": "Arista Networks",
            "OU": "Autogenerated kubernetes cluster CA",
            "L": "San Francisco",
            "ST": "California",
            "C": "US"
          }
        ]
      }
    dest: "{{ inventory_dir }}/files/k8s/ca-csr.json"

- name: Create k8s ca-config.json file
  copy:
    content: |
      {
        "signing": {
          "default": {
            "usages": [
              "signing",
              "key encipherment",
              "server auth",
              "client auth"
            ],
            "expiry": "87600h"
          }
        }
      }
    dest: "{{ inventory_dir }}/files/k8s/ca-config.json"

- name: Create k8s apiserver-csr.json file
  template:
    src: k8s-apiserver-csr.json.j2
    dest: "{{ inventory_dir }}/files/k8s/apiserver-csr.json"

- name: Create k8s worker-csr.json file
  copy:
    content: |
      {
        "CN": "kube-worker",
        "hosts": [
          ""
        ],
        "key": {
          "algo": "ecdsa",
          "size": 384
        },
        "names": [
          {
            "O": "Arista Networks",
            "OU": "autogenerated kubernetes cluster",
            "L": "San Francisco",
            "ST": "California",
            "C": "US"
          }
        ]
      }
    dest: "{{ inventory_dir }}/files/k8s/worker-csr.json"

- name: Create k8s admin-csr.json file (for kubectl cert)
  copy:
    content: |
      {
        "CN": "kube-admin",
        "hosts": [
          ""
        ],
        "key": {
          "algo": "ecdsa",
          "size": 384
        },
        "names": [
          {
            "O": "Arista Networks",
            "OU": "autogenerated kubernetes cluster",
            "L": "San Francisco",
            "ST": "California",
            "C": "US"
          }
        ]
      }
    dest: "{{ inventory_dir }}/files/k8s/admin-csr.json"

- name: Generate k8s ca cert
  shell: >
    cfssl gencert
    -initca "{{ inventory_dir }}/files/k8s/ca-csr.json"
    | cfssljson -bare "{{ inventory_dir }}/files/k8s/ca"

- name: Generate k8s admin certs (for kubectl)
  shell: >
    cfssl gencert
    -ca "{{ inventory_dir }}/files/k8s/ca.pem"
    -ca-key "{{ inventory_dir }}/files/k8s/ca-key.pem"
    -config "{{ inventory_dir }}/files/k8s/ca-config.json"
    -profile admin
    "{{ inventory_dir }}/files/k8s/admin-csr.json"
    | cfssljson -bare "{{ inventory_dir }}/files/k8s/admin"

- name: Generate k8s apiserver certs
  shell: >
    cfssl gencert
    -ca "{{ inventory_dir }}/files/k8s/ca.pem"
    -ca-key "{{ inventory_dir }}/files/k8s/ca-key.pem"
    -config "{{ inventory_dir }}/files/k8s/ca-config.json"
    -profile apiserver
    "{{ inventory_dir }}/files/k8s/apiserver-csr.json"
    | cfssljson -bare "{{ inventory_dir }}/files/k8s/apiserver"

- name: Generate k8s worker certs
  shell: >
    cfssl gencert
    -ca "{{ inventory_dir }}/files/k8s/ca.pem"
    -ca-key "{{ inventory_dir }}/files/k8s/ca-key.pem"
    -config "{{ inventory_dir }}/files/k8s/ca-config.json"
    -profile worker
    "{{ inventory_dir }}/files/k8s/worker-csr.json" | cfssljson -bare "{{ inventory_dir }}/files/k8s/worker"

- name: Encrypt certificates
  shell: >
    ansible-vault
    --vault-password-file ./.pass.{{ cluster_name }}
    encrypt "{{ inventory_dir }}/files/k8s/{{ item }}"
  with_items:
    - ca-key.pem
    - ca.csr
    - ca.pem
    - admin-key.pem
    - admin.csr
    - admin.pem
    - apiserver-key.pem
    - apiserver.csr
    - apiserver.pem
    - worker-key.pem
    - worker.csr
    - worker.pem


---

- name: create folder dir for etcd certs
  file:
    path: "{{ inventory_dir }}/files/etcd"
    state: directory

- name: Create etcd ca-csr.json file
  copy:
    content: |
      {
        "CN": "Autogenerated CA",
        "key": {
          "algo": "ecdsa",
          "size": 384
        },
        "names": [
          {
            "O": "Arista Networks",
            "OU": "Autogenerated etcd cluster CA",
            "L": "San Francisco",
            "ST": "California",
            "C": "US"
          }
        ]
      }
    dest: "{{ inventory_dir }}/files/etcd/ca-csr.json"

- name: Create etcd ca-config.json file
  copy:
    content: |
      {
        "signing": {
          "default": {
            "usages": [
              "signing",
              "key encipherment",
              "server auth",
              "client auth"
            ],
            "expiry": "87600h"
          }
        }
      }
    dest: "{{ inventory_dir }}/files/etcd/ca-config.json"

- name: Create etcd req-csr.json file
  template:
    src: etcd-req-csr.json.j2
    dest: "{{ inventory_dir }}/files/etcd/req-csr.json"

- name: Create etcd client-csr.json file
  copy:
    content: |
      {
        "CN": "etcd-clients",
        "hosts": [
          ""
        ],
        "key": {
          "algo": "ecdsa",
          "size": 384
        },
        "names": [
          {
            "O": "Arista Networks",
            "OU": "autogenerated etcd cluster",
            "L": "San Francisco",
            "ST": "California",
            "C": "US"
          }
        ]
      }
    dest: "{{ inventory_dir }}/files/etcd/client-csr.json"

- name: Generate etcd ca cert
  shell: >
    cfssl gencert
    -initca "{{ inventory_dir }}/files/etcd/ca-csr.json"
    | cfssljson -bare "{{ inventory_dir }}/files/etcd/ca"

- name: Generate etcd admin certs
  shell: >
    cfssl gencert
    -ca "{{ inventory_dir }}/files/etcd/ca.pem"
    -ca-key "{{ inventory_dir }}/files/etcd/ca-key.pem"
    -config "{{ inventory_dir }}/files/etcd/ca-config.json" "{{ inventory_dir }}/files/etcd/req-csr.json"
    | cfssljson -bare "{{ inventory_dir }}/files/etcd/etcd"

- name: Generate etcd client certs
  shell: >
    cfssl gencert
    -ca "{{ inventory_dir }}/files/etcd/ca.pem"
    -ca-key "{{ inventory_dir }}/files/etcd/ca-key.pem"
    -config "{{ inventory_dir }}/files/etcd/ca-config.json"
    -profile client
    "{{ inventory_dir }}/files/etcd/client-csr.json" | cfssljson -bare "{{ inventory_dir }}/files/etcd/client"

- name: Encrypt certificates
  shell: >
    ansible-vault
    --vault-password-file ./.pass.{{ cluster_name }}
    encrypt "{{ inventory_dir }}/files/etcd/{{ item }}"
  with_items:
    - ca-key.pem
    - ca.csr
    - ca.pem
    - etcd-key.pem
    - etcd.csr
    - etcd.pem
    - client-key.pem
    - client.csr
    - client.pem

# This role will install a kubernetes cluster on the specified hosts
# based on the k8s_masters and k8s_workers ansible groups
# for the processed inventory

---

- include_tasks: iptables.yml
  when: firewall == True

- import_tasks: init_etc_hosts.yml

- import_tasks: data_folders.yml

- name: Create directories
  become: True
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0755
    state: directory
  with_items:
    - /opt/bin
    - /etc/kubernetes/ssl
    - /etc/kubernetes/manifests
    - /etc/flannel
    - /etc/systemd/system/flanneld.service.d
    - /etc/systemd/system/docker.service.d
    - /etc/ssl/etcd

- import_tasks: flannel-etcd.yml
  when: not flannel_kube

- import_tasks: flannel-kube-subnet-manager.yml
  when: flannel_kube

# TODO: init flanneld info on etcd2
# curl -X PUT -d "value={\"Network\":\"10.2.0.0/16\",\"Backend\":{\"Type\":\"vxlan\"}}" "$ETCD_SERVER/v2/keys/coreos.com/network/config"

# This is too dangerous and not really useful for now.
# Related github issues:
# https://github.com/moby/moby/issues/22789
# https://github.com/moby/moby/issues/21109
# Related trello card:
# https://trello.com/c/9fGfPtaZ
#
# - name: Restart docker daemon
#   become: True
#   command: systemctl restart docker.service
  # TODO: We should restart when we really changed something

- name: start docker deamon (or be sure it's running)
  become: True
  systemd:
    name: docker.service
    state: started
    enabled: yes

- name: Check if kubelet binary not already installed
  stat:
    path: /opt/bin/kubelet-{{ k8s_version }}
  register: kubelet_stat

- name: Download kubelet binary
  become: True
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v{{ k8s_version }}/bin/linux/amd64/kubelet
    checksum: "md5:{{ k8s_kubelet_md5 }}"
    dest: "/opt/bin/kubelet-{{ k8s_version }}"
    force: yes
    mode: 0755
  when: kubelet_stat.stat.checksum is not defined or kubelet_stat.stat.md5 != k8s_kubelet_md5
  register: kubelet_binary

- name: Install k8s certificates
  become: True
  copy:
    content: "{{ item.value }}"
    dest: /etc/kubernetes/ssl/{{ item.key }}
    owner: root
    group: root
    mode: 0600
  with_dict: "{{ certificates }}"
  register: kcerts


- name: Install etcd client certificates
  become: True
  copy:
    content: "{{ item.value }}"
    dest: /etc/ssl/etcd/{{ item.key }}
    owner: root
    group: root
    mode: 0600
  with_dict: "{{ etcd_certificates }}"
  register: clientcerts
  when: "'k8s_masters' in group_names"

- name: Remove possible old-config manifest
  become: True
  file:
    path: /etc/kubernetes/manifests/kube-proxy.yaml
    state: absent

- name: Install k8s manifests
  become: True
  template:
    src: "{{ item }}.j2"
    dest: /etc/kubernetes/manifests/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items: "{{ manifests }}"
  register: kmanifests

- name: Install kubeconfig.yaml
  become: True
  template:
    src: "{{ kubeconfig }}.yaml.j2"
    dest: "/etc/kubernetes/{{ kubeconfig }}.yaml"
    owner: root
    group: root
    mode: 0755

- name: Install k8s service
  become: True
  template:
    src: kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
    owner: root
    group: root
    mode: 0644
  register: kservice

- name: Enable kubelet.service unit
  become: True
  systemd:
    name: kubelet.service
    enabled: yes

- name: Restart k8s service if needed
  become: True
  systemd:
    name: kubelet.service
    state: restarted
    daemon_reload: yes
  when: kservice.changed or kcerts.changed or kmanifests.changed or kubelet_binary.changed or clientcerts.changed

- name: Install socat binary
  become: True
  get_url:
    url: https://github.com/jfrabaute/socat-static-binary/releases/download/v0.0.1/socat-linux-amd64
    checksum: sha256:e2d0da018252fc18f755014854cf4c337a7a1c446879677fc1e20644c744eab2
    dest: /opt/bin/socat
    owner: root
    group: root
    mode: 0700

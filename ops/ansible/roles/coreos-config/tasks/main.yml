- name: Create ssh keys data directory
  file:
    path: "{{ ansible_env.HOME }}/.ssh/authorized_keys.d"
    state: directory
    owner: core
    group: core
    mode: 0700

- name: Install ssh keys
  copy:
    content: "{{ ssh_keys | join('\n') }}"
    dest: "/home/core/.ssh/authorized_keys.d/coreos-cloudinit"
    mode: 0600
  register: result

- name: Update ssh keys
  command: update-ssh-keys -l
  when: result.changed


- name: inotify config
  become: True
  copy:
    src: roles/common/files/inotify.conf
    dest: /etc/sysctl.d/inotify.conf
  register: result

- name: update config
  become: True
  copy:
    src: roles/common/files/update.conf
    dest: /etc/coreos/update.conf

- name: re-enable ipv6 step 1
  become: True
  file:
    path: /etc/sysctl.d/10-disable-ipv6.conf
    state: absent
  register: result2

- name: re-enable ipv6 step 2
  become: True
  copy:
    src: roles/common/files/10-enable-ipv6.conf
    dest: /etc/sysctl.d/10-enable-ipv6.conf
  register: result3

- name: sysctl config reload
  become: True
  command: sysctl --system
  when: result.changed or result2.changed or result3.changed

# TODO: Need to revamp this: The insecure registry is only
#       needed on dev and staging. We shouldn't need this on other clusters.
#       Even on dev and staging, we should move to the same config as prod.
- name: Create folder for docker service drop-in
  become: True
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Install docker insecure registry
  # Note that docker daemon needs to be restarted in order for this change to
  # take effect, but as restarting docker daemon will stop all the
  # running docker containers, it's not done by ansible but left as a manual
  # process
  become: True
  copy:
    src: roles/common/files/docker.50-options{% if flannel_kube %}-default{% endif %}.conf
    dest: /etc/systemd/system/docker.service.d/50-options.conf

# Workaround for bug:
# https://github.com/systemd/systemd/issues/3374#issuecomment-288882355
- name: Fix systemd-udevd bug
  become: True
  copy:
    src: roles/common/files/99-default.link
    dest: /etc/systemd/network/99-default.link
  register: result_99_default_link

# Arista is using two domains in the search.
# systemd-networkd is using only the first one from the dhcp server
# so we hardcode both in this config file to override the default config
# Bug: https://github.com/systemd/systemd/issues/2710
# FIXME: This might be fixed by https://github.com/systemd/systemd/pull/5932
# Validate and remove file if it works with this fix
- name: Customize network settings
  become: True
  copy:
    src: roles/common/files/zy-dhcp.network
    dest: /etc/systemd/network/zy-dhcp.network
  register: result_zy_dhcp_network

- name: Restart network to take new network and link config into account
  become: True
  systemd:
      name: systemd-networkd.service
      state: restarted
  when: result_zy_dhcp_network.changed or result_99_default_link.changed

- name: Restart timesyncd to take new network config into account
  become: True
  systemd:
      name: systemd-timesyncd.service
      state: restarted
  when: result_zy_dhcp_network.changed

- name: Create the .bashrc.d folder so other roles can customize the core user shell
  file:
    path: "{{ ansible_env.HOME }}/.bashrc.d"
    mode: 0755
    state: directory

# Note: recommended method from the CoreOS team:
# https://github.com/coreos/bugs/issues/1342#issuecomment-241726123
- name: Install our bashrc so we can customize the core user shell
  copy:
    src: bashrc
    dest: "{{ ansible_env.HOME }}/.bashrc"

- name: Install common bashrc file
  template:
    src: util.bashrc.j2
    dest: "{{ ansible_env.HOME }}/.bashrc.d/util.bashrc"

- name: Custom config for ovh-bhs cluster
  import_tasks: custom-ovh-bhs.yml
  when: cluster_name == "ovh-bhs"

- name: Get ip address of all the etcd2 nodes
  set_fact:
    etcd2_ips: "[{% for host in groups.etcd2 %}'{% if 'ansible_host' in hostvars[host] %}{{ lookup('dig', hostvars[host]['ansible_host']) }}{% else %}{{ lookup('dig', host) }}{% endif %}',{% endfor %}]"

- name: Disable etcd2 on non-etcd2 nodes
  become: True
  systemd:
    state: stopped
    enabled: no
    name: etcd2.service
  when: ansible_default_ipv4["address"] not in etcd2_ips

- name: gather facts for openvpn server host
  setup:
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ groups.openvpn }}"
  when: "'openvpn' in groups"

# TODO: Switch to ansible net_static_route when the module works for linux
# https://github.com/ansible/ansible/issues/32050
- name: install openvpn routes on all the hosts
  become: True
  shell: ip route show {{ vpn_subnet }} | grep {{ vpn_subnet }} || ip route add {{ vpn_subnet }} via {{ lookup('ip_by_prefix', private_ip_prefix, hostvars[groups.openvpn[0]]) }}
  when: "'openvpn' in groups and inventory_hostname != groups.openvpn[0]"

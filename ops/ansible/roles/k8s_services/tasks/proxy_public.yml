# Copyright (c) 2017 Arista Networks, Inc.  All rights reserved.
# Arista Networks, Inc. Confidential and Proprietary.
# Subject to Arista Networks, Inc.'s EULA.
# FOR INTERNAL USE ONLY. NOT FOR DISTRIBUTION.

---

# Add config for public grpc service
- name: Add haproxy config to expose public grpc services
  with_items: "{{ services.grpc }}"
  kubernetes:
    api_endpoint: 127.0.0.1:8001
    state: apply
    insecure: true
    inline_data: |
      #jinja2: block_start_string: '[%', block_end_string: '%]', variable_start_string: '[[', variable_end_string: ']]'
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: haproxy-conf-public-grpc-[[ item ]]
      data:
        haproxy.toml: |
          [template]
          src = "haproxy.cfg.tmpl"
          dest = "/etc/haproxy/haproxy.cfg"
          keys = [
            "/services/default",
            "/endpoints/default",
          ]

          check_cmd = "/usr/sbin/haproxy -c -f {{ .src }}"
          reload_cmd = "haproxy -f /etc/haproxy/haproxy.cfg -p /var/run/haproxy.pid -D -sf $(cat /var/run/haproxy.pid)"

        haproxy.cfg.tmpl: |
          # Copyright (c) 2015 Arista Networks, Inc.  All rights reserved.
          # Arista Networks, Inc. Confidential and Proprietary.
          # Subject to Arista Networks, Inc.'s EULA.
          # FOR INTERNAL USE ONLY. NOT FOR DISTRIBUTION.

          global
            daemon
            pidfile /var/run/haproxy.pid
            maxconn 128000

          defaults
            mode tcp
            timeout connect 5000ms
            timeout client 50000ms
            timeout client-fin 50000ms
            timeout server 50000ms
            timeout tunnel 1h    # timeout to use with WebSocket and CONNECT

          listen stats
            bind *:1234
            mode http
            stats enable
            stats uri /
            stats refresh 5s

          # GRPC Service [[item]]
          #########################
          {{- if exists "/endpoints/default/[[item]]"}}
          listen tcp_[[item]]
            bind *:443
            mode tcp
            timeout connect  4000
            timeout client   180000
            timeout server   180000
            {{- $endpoints := print "/endpoints/default/[[item]]" }}
            {{- range $i, $subset := (json (getv $endpoints)).subsets }}
            {{- range $j, $addr := $subset.addresses }}
            {{- range $k, $port := $subset.ports }}
            server tcp_[[item]]_{{ print $i "_" $j "_" $k }} {{$addr.ip}}:{{.port}}
            {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}

- name: deploy public proxy daemonset for grpc services
  with_items: "{{ services.grpc }}"
  kubernetes:
    api_endpoint: 127.0.0.1:8001
    insecure: true
    state: apply
    inline_data: |
      apiVersion: extensions/v1beta1
      kind: DaemonSet
      metadata:
        name: proxy-grpc-{{ item }}
      spec:
        selector:
          matchLabels:
            app: proxy-grpc-{{ item }}
        template:
          metadata:
            name: proxy-grpc-{{ item }}
            # annotations:
            #   TODO: enable metrics
            #   prometheus.io/scrape: "true"
            #   prometheus.io/port: "9201"
            labels:
              app: proxy-grpc-{{ item }}
          spec:
            nodeSelector:
              proxy: grpc-{{ item }}
            containers:
            - name: proxy
              image: aristanetworks/haproxy-confd
              imagePullPolicy: Always
              args:
                - -backend
                - kubernetes
                - -watch
                - "true"
                - -logtostderr
              ports:
                - name: https
                  containerPort: 443
                  hostPort: 443
                - name: haproxy-stats
                  containerPort: 1234
              volumeMounts:
              - name: haproxy-conf-public-grpc-{{ item }}
                mountPath: /etc/confd/templates/haproxy.cfg.tmpl
                subPath: haproxy.cfg.tmpl
              - name: haproxy-conf-public-grpc-{{ item }}
                mountPath: /etc/confd/conf.d/haproxy.toml
                subPath: haproxy.toml
            volumes:
            - name: haproxy-conf-public-grpc-{{ item }}
              configMap:
                name: haproxy-conf-public-grpc-{{ item }}

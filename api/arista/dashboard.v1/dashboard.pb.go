// Copyright (c) 2020 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.
// Subject to Arista Networks, Inc.'s EULA.
// FOR INTERNAL USE ONLY. NOT FOR DISTRIBUTION.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.7
// source: arista/dashboard.v1/dashboard.proto

package dashboard

import (
	fmp "github.com/aristanetworks/cloudvision-go/api/fmp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Position represents a cell position in the UI.
type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// x represents a position in the horizontal axis.
	X *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	// y represents a position in the vertical axis.
	Y *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_arista_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{0}
}

func (x *Position) GetX() *wrapperspb.UInt32Value {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *Position) GetY() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Y
	}
	return nil
}

// Dimensions represents the dimensions in cells of the widgets in the UI.
type Dimensions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// width of the widget in the UI, represented in number of cells.
	Width *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=width,proto3" json:"width,omitempty"`
	// height of the widget in the UI, represented in number of cells.
	Height *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Dimensions) Reset() {
	*x = Dimensions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimensions) ProtoMessage() {}

func (x *Dimensions) ProtoReflect() protoreflect.Message {
	mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimensions.ProtoReflect.Descriptor instead.
func (*Dimensions) Descriptor() ([]byte, []int) {
	return file_arista_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{1}
}

func (x *Dimensions) GetWidth() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *Dimensions) GetHeight() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Height
	}
	return nil
}

// Widgets are used to create a dashboard.
// Each widget is responsible to display some type of data.
// Widgets are individually configurable.
type Widget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id holds the unique identifier for the widget inside a dashboard
	Id *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name of the widget is displayed at the top of the widget.
	Name *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// position of the widget, represented as a (x,y) coordinate in a grid.
	// Top left is at (0,0).
	Position *Position `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	// dimension of the widget represents how many cell in the grid it takes.
	Dimensions *Dimensions `protobuf:"bytes,4,opt,name=dimensions,proto3" json:"dimensions,omitempty"`
	// type is the widget type. Each type is handled differently in the UI,
	// and can use different `inputs`.
	Type *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// inputs contains metadata about the data the widget will display, encoded in a JSON string.
	// Internal data vary based on the widget type `type` and is managed by the client.
	Inputs *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=inputs,proto3" json:"inputs,omitempty"`
	// location is used as a position display hint, used and managed by the UI.
	Location *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *Widget) Reset() {
	*x = Widget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Widget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Widget) ProtoMessage() {}

func (x *Widget) ProtoReflect() protoreflect.Message {
	mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Widget.ProtoReflect.Descriptor instead.
func (*Widget) Descriptor() ([]byte, []int) {
	return file_arista_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{2}
}

func (x *Widget) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Widget) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Widget) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Widget) GetDimensions() *Dimensions {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *Widget) GetType() *wrapperspb.StringValue {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Widget) GetInputs() *wrapperspb.StringValue {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Widget) GetLocation() *wrapperspb.StringValue {
	if x != nil {
		return x.Location
	}
	return nil
}

// Widgets holds a list of `Widget`s.
type Widgets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*Widget `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Widgets) Reset() {
	*x = Widgets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Widgets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Widgets) ProtoMessage() {}

func (x *Widgets) ProtoReflect() protoreflect.Message {
	mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Widgets.ProtoReflect.Descriptor instead.
func (*Widgets) Descriptor() ([]byte, []int) {
	return file_arista_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{3}
}

func (x *Widgets) GetValues() []*Widget {
	if x != nil {
		return x.Values
	}
	return nil
}

// DashboardKey represents the dashboard unique identifier.
type DashboardKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DashboardId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=dashboard_id,json=dashboardId,proto3" json:"dashboard_id,omitempty"`
}

func (x *DashboardKey) Reset() {
	*x = DashboardKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardKey) ProtoMessage() {}

func (x *DashboardKey) ProtoReflect() protoreflect.Message {
	mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardKey.ProtoReflect.Descriptor instead.
func (*DashboardKey) Descriptor() ([]byte, []int) {
	return file_arista_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{4}
}

func (x *DashboardKey) GetDashboardId() *wrapperspb.StringValue {
	if x != nil {
		return x.DashboardId
	}
	return nil
}

// DashboardConfig includes all user-editable dashboard fields.
type DashboardConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key is the unique identifier. It always must be defined.
	// If set, will create or update a dashboard.
	Key *DashboardKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// name is the dashboard name, displayed at the top of the dashboard.
	Name *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// description may include details about what is displayed in the dashboard.
	Description *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// widgets list of widgets in the dashboard.
	Widgets *Widgets `protobuf:"bytes,4,opt,name=widgets,proto3" json:"widgets,omitempty"`
}

func (x *DashboardConfig) Reset() {
	*x = DashboardConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardConfig) ProtoMessage() {}

func (x *DashboardConfig) ProtoReflect() protoreflect.Message {
	mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardConfig.ProtoReflect.Descriptor instead.
func (*DashboardConfig) Descriptor() ([]byte, []int) {
	return file_arista_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{5}
}

func (x *DashboardConfig) GetKey() *DashboardKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DashboardConfig) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *DashboardConfig) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *DashboardConfig) GetWidgets() *Widgets {
	if x != nil {
		return x.Widgets
	}
	return nil
}

// DashboardMetadata includes versioning metadata. All the data here is managed internally, and
// is read-only.
type DashboardMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// schema_version is managed internally.
	SchemaVersion *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	// legacy_key holds the key of a previous version of the dashboard, in case it was migrated.
	LegacyKey *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=legacy_key,json=legacyKey,proto3" json:"legacy_key,omitempty"`
	// legacy_version tells from which version the dashboard was migrated from.
	LegacyVersion *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=legacy_version,json=legacyVersion,proto3" json:"legacy_version,omitempty"`
}

func (x *DashboardMetadata) Reset() {
	*x = DashboardMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardMetadata) ProtoMessage() {}

func (x *DashboardMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardMetadata.ProtoReflect.Descriptor instead.
func (*DashboardMetadata) Descriptor() ([]byte, []int) {
	return file_arista_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{6}
}

func (x *DashboardMetadata) GetSchemaVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.SchemaVersion
	}
	return nil
}

func (x *DashboardMetadata) GetLegacyKey() *wrapperspb.StringValue {
	if x != nil {
		return x.LegacyKey
	}
	return nil
}

func (x *DashboardMetadata) GetLegacyVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.LegacyVersion
	}
	return nil
}

// Filter is used to filter dashboards for non exact match cases.
type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// tags includes the values to be matched in the dashboard description.
	// Tags are matched by word. Generally, a tag is prefixed by a '#',
	// which must be omitted when provided here.
	// All provided tags must match inside a dashboard for it to be returned.
	// E.g., to match "#devices", the tag should be set to "devices".
	Tags *fmp.RepeatedString `protobuf:"bytes,1,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_arista_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{7}
}

func (x *Filter) GetTags() *fmp.RepeatedString {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Dashboard state contains all dashboard data.
type Dashboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key is the unique identifier. It will always be defined.
	Key *DashboardKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// created_at represents the date the dashboard was first created.
	// Old dashboards may not have this field set.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// created_by keeps the name of the user who first created this dashboard.
	// Old dashboards may not have this field set.
	CreatedBy *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// last_modified_at holds the timestamp this dashboard was last updated by an user.
	// Old dashboards may not have this field set.
	LastModifiedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_modified_at,json=lastModifiedAt,proto3" json:"last_modified_at,omitempty"`
	// last_modified_by holds the username who last updated this dashboard.
	// Old dashboards may not have this field set.
	LastModifiedBy *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=last_modified_by,json=lastModifiedBy,proto3" json:"last_modified_by,omitempty"`
	// meta_data includes version metadata about the dashboard.
	MetaData *DashboardMetadata `protobuf:"bytes,6,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	// name is the dashboard name, displayed at the top of the dashboard.
	Name *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	// description may include details about what is displayed in the dashboard.
	Description *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	// widgets list of widgets in the dashboard.
	Widgets *Widgets `protobuf:"bytes,9,opt,name=widgets,proto3" json:"widgets,omitempty"`
}

func (x *Dashboard) Reset() {
	*x = Dashboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard) ProtoMessage() {}

func (x *Dashboard) ProtoReflect() protoreflect.Message {
	mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard.ProtoReflect.Descriptor instead.
func (*Dashboard) Descriptor() ([]byte, []int) {
	return file_arista_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{8}
}

func (x *Dashboard) GetKey() *DashboardKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Dashboard) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Dashboard) GetCreatedBy() *wrapperspb.StringValue {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Dashboard) GetLastModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModifiedAt
	}
	return nil
}

func (x *Dashboard) GetLastModifiedBy() *wrapperspb.StringValue {
	if x != nil {
		return x.LastModifiedBy
	}
	return nil
}

func (x *Dashboard) GetMetaData() *DashboardMetadata {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *Dashboard) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Dashboard) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Dashboard) GetWidgets() *Widgets {
	if x != nil {
		return x.Widgets
	}
	return nil
}

// GlobalDashboardConfig holds global configs related to Dashboards.
type GlobalDashboardConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// default_dashboard is the default dashboard shown to a user.
	// To unset, use an empty key (`{dashboard_id: nil}`) in a `Set()` call.
	DefaultDashboard *DashboardKey `protobuf:"bytes,1,opt,name=default_dashboard,json=defaultDashboard,proto3" json:"default_dashboard,omitempty"`
}

func (x *GlobalDashboardConfig) Reset() {
	*x = GlobalDashboardConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalDashboardConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalDashboardConfig) ProtoMessage() {}

func (x *GlobalDashboardConfig) ProtoReflect() protoreflect.Message {
	mi := &file_arista_dashboard_v1_dashboard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalDashboardConfig.ProtoReflect.Descriptor instead.
func (*GlobalDashboardConfig) Descriptor() ([]byte, []int) {
	return file_arista_dashboard_v1_dashboard_proto_rawDescGZIP(), []int{9}
}

func (x *GlobalDashboardConfig) GetDefaultDashboard() *DashboardKey {
	if x != nil {
		return x.DefaultDashboard
	}
	return nil
}

var File_arista_dashboard_v1_dashboard_proto protoreflect.FileDescriptor

var file_arista_dashboard_v1_dashboard_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x66, 0x6d, 0x70,
	0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x66, 0x6d, 0x70, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x01, 0x78, 0x12, 0x2a, 0x0a,
	0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x01, 0x79, 0x22, 0x76, 0x0a, 0x0a, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x86, 0x03, 0x0a, 0x06, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72,
	0x69, 0x73, 0x74, 0x61, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x64, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x38, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x07, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x0c, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x0c, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x3a, 0x04, 0x80, 0x8e, 0x19,
	0x01, 0x22, 0xf8, 0x01, 0x0a, 0x0f, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x07,
	0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x52, 0x07, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x73, 0x3a, 0x06, 0xfa, 0x8d, 0x19, 0x02, 0x72, 0x77, 0x22, 0xda, 0x01, 0x0a,
	0x11, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x43, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0a, 0x6c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x4b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x0e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x66, 0x6d, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xc9, 0x04, 0x0a,
	0x09, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x33, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x44, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x42, 0x79, 0x12, 0x43, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x07,
	0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x52, 0x07, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x73, 0x3a, 0x12, 0xfa, 0x8d, 0x19, 0x02, 0x72, 0x6f, 0x8a, 0x8e, 0x19, 0x08,
	0x5b, 0x5d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x15, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x4e, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x52,
	0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x3a, 0x06, 0xa2, 0x8e, 0x19, 0x02, 0x72, 0x77, 0x42, 0x30, 0x5a, 0x2e, 0x61, 0x72, 0x69,
	0x73, 0x74, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x72,
	0x69, 0x73, 0x74, 0x61, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x3b, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_arista_dashboard_v1_dashboard_proto_rawDescOnce sync.Once
	file_arista_dashboard_v1_dashboard_proto_rawDescData = file_arista_dashboard_v1_dashboard_proto_rawDesc
)

func file_arista_dashboard_v1_dashboard_proto_rawDescGZIP() []byte {
	file_arista_dashboard_v1_dashboard_proto_rawDescOnce.Do(func() {
		file_arista_dashboard_v1_dashboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_arista_dashboard_v1_dashboard_proto_rawDescData)
	})
	return file_arista_dashboard_v1_dashboard_proto_rawDescData
}

var file_arista_dashboard_v1_dashboard_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_arista_dashboard_v1_dashboard_proto_goTypes = []interface{}{
	(*Position)(nil),               // 0: arista.dashboard.v1.Position
	(*Dimensions)(nil),             // 1: arista.dashboard.v1.Dimensions
	(*Widget)(nil),                 // 2: arista.dashboard.v1.Widget
	(*Widgets)(nil),                // 3: arista.dashboard.v1.Widgets
	(*DashboardKey)(nil),           // 4: arista.dashboard.v1.DashboardKey
	(*DashboardConfig)(nil),        // 5: arista.dashboard.v1.DashboardConfig
	(*DashboardMetadata)(nil),      // 6: arista.dashboard.v1.DashboardMetadata
	(*Filter)(nil),                 // 7: arista.dashboard.v1.Filter
	(*Dashboard)(nil),              // 8: arista.dashboard.v1.Dashboard
	(*GlobalDashboardConfig)(nil),  // 9: arista.dashboard.v1.GlobalDashboardConfig
	(*wrapperspb.UInt32Value)(nil), // 10: google.protobuf.UInt32Value
	(*wrapperspb.StringValue)(nil), // 11: google.protobuf.StringValue
	(*fmp.RepeatedString)(nil),     // 12: fmp.RepeatedString
	(*timestamppb.Timestamp)(nil),  // 13: google.protobuf.Timestamp
}
var file_arista_dashboard_v1_dashboard_proto_depIdxs = []int32{
	10, // 0: arista.dashboard.v1.Position.x:type_name -> google.protobuf.UInt32Value
	10, // 1: arista.dashboard.v1.Position.y:type_name -> google.protobuf.UInt32Value
	10, // 2: arista.dashboard.v1.Dimensions.width:type_name -> google.protobuf.UInt32Value
	10, // 3: arista.dashboard.v1.Dimensions.height:type_name -> google.protobuf.UInt32Value
	11, // 4: arista.dashboard.v1.Widget.id:type_name -> google.protobuf.StringValue
	11, // 5: arista.dashboard.v1.Widget.name:type_name -> google.protobuf.StringValue
	0,  // 6: arista.dashboard.v1.Widget.position:type_name -> arista.dashboard.v1.Position
	1,  // 7: arista.dashboard.v1.Widget.dimensions:type_name -> arista.dashboard.v1.Dimensions
	11, // 8: arista.dashboard.v1.Widget.type:type_name -> google.protobuf.StringValue
	11, // 9: arista.dashboard.v1.Widget.inputs:type_name -> google.protobuf.StringValue
	11, // 10: arista.dashboard.v1.Widget.location:type_name -> google.protobuf.StringValue
	2,  // 11: arista.dashboard.v1.Widgets.values:type_name -> arista.dashboard.v1.Widget
	11, // 12: arista.dashboard.v1.DashboardKey.dashboard_id:type_name -> google.protobuf.StringValue
	4,  // 13: arista.dashboard.v1.DashboardConfig.key:type_name -> arista.dashboard.v1.DashboardKey
	11, // 14: arista.dashboard.v1.DashboardConfig.name:type_name -> google.protobuf.StringValue
	11, // 15: arista.dashboard.v1.DashboardConfig.description:type_name -> google.protobuf.StringValue
	3,  // 16: arista.dashboard.v1.DashboardConfig.widgets:type_name -> arista.dashboard.v1.Widgets
	11, // 17: arista.dashboard.v1.DashboardMetadata.schema_version:type_name -> google.protobuf.StringValue
	11, // 18: arista.dashboard.v1.DashboardMetadata.legacy_key:type_name -> google.protobuf.StringValue
	11, // 19: arista.dashboard.v1.DashboardMetadata.legacy_version:type_name -> google.protobuf.StringValue
	12, // 20: arista.dashboard.v1.Filter.tags:type_name -> fmp.RepeatedString
	4,  // 21: arista.dashboard.v1.Dashboard.key:type_name -> arista.dashboard.v1.DashboardKey
	13, // 22: arista.dashboard.v1.Dashboard.created_at:type_name -> google.protobuf.Timestamp
	11, // 23: arista.dashboard.v1.Dashboard.created_by:type_name -> google.protobuf.StringValue
	13, // 24: arista.dashboard.v1.Dashboard.last_modified_at:type_name -> google.protobuf.Timestamp
	11, // 25: arista.dashboard.v1.Dashboard.last_modified_by:type_name -> google.protobuf.StringValue
	6,  // 26: arista.dashboard.v1.Dashboard.meta_data:type_name -> arista.dashboard.v1.DashboardMetadata
	11, // 27: arista.dashboard.v1.Dashboard.name:type_name -> google.protobuf.StringValue
	11, // 28: arista.dashboard.v1.Dashboard.description:type_name -> google.protobuf.StringValue
	3,  // 29: arista.dashboard.v1.Dashboard.widgets:type_name -> arista.dashboard.v1.Widgets
	4,  // 30: arista.dashboard.v1.GlobalDashboardConfig.default_dashboard:type_name -> arista.dashboard.v1.DashboardKey
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_arista_dashboard_v1_dashboard_proto_init() }
func file_arista_dashboard_v1_dashboard_proto_init() {
	if File_arista_dashboard_v1_dashboard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_arista_dashboard_v1_dashboard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_dashboard_v1_dashboard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimensions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_dashboard_v1_dashboard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Widget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_dashboard_v1_dashboard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Widgets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_dashboard_v1_dashboard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_dashboard_v1_dashboard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_dashboard_v1_dashboard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_dashboard_v1_dashboard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_dashboard_v1_dashboard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dashboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_dashboard_v1_dashboard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalDashboardConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_arista_dashboard_v1_dashboard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_arista_dashboard_v1_dashboard_proto_goTypes,
		DependencyIndexes: file_arista_dashboard_v1_dashboard_proto_depIdxs,
		MessageInfos:      file_arista_dashboard_v1_dashboard_proto_msgTypes,
	}.Build()
	File_arista_dashboard_v1_dashboard_proto = out.File
	file_arista_dashboard_v1_dashboard_proto_rawDesc = nil
	file_arista_dashboard_v1_dashboard_proto_goTypes = nil
	file_arista_dashboard_v1_dashboard_proto_depIdxs = nil
}

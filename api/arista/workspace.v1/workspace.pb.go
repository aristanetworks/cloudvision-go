// Copyright (c) 2020 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.
// Subject to Arista Networks, Inc.'s EULA.
// FOR INTERNAL USE ONLY. NOT FOR DISTRIBUTION.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: arista/workspace.v1/workspace.proto

package workspace

import (
	configstatus_v1 "github.com/aristanetworks/cloudvision-go/api/arista/configstatus.v1"
	fmp "github.com/aristanetworks/cloudvision-go/api/fmp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkspaceState int32

const (
	WorkspaceState_WORKSPACE_STATE_UNSPECIFIED WorkspaceState = 0
	WorkspaceState_WORKSPACE_STATE_PENDING     WorkspaceState = 1
	WorkspaceState_WORKSPACE_STATE_SUBMITTED   WorkspaceState = 2
	WorkspaceState_WORKSPACE_STATE_ABANDONED   WorkspaceState = 3
	WorkspaceState_WORKSPACE_STATE_CONFLICTS   WorkspaceState = 4
	WorkspaceState_WORKSPACE_STATE_ROLLED_BACK WorkspaceState = 5
)

// Enum value maps for WorkspaceState.
var (
	WorkspaceState_name = map[int32]string{
		0: "WORKSPACE_STATE_UNSPECIFIED",
		1: "WORKSPACE_STATE_PENDING",
		2: "WORKSPACE_STATE_SUBMITTED",
		3: "WORKSPACE_STATE_ABANDONED",
		4: "WORKSPACE_STATE_CONFLICTS",
		5: "WORKSPACE_STATE_ROLLED_BACK",
	}
	WorkspaceState_value = map[string]int32{
		"WORKSPACE_STATE_UNSPECIFIED": 0,
		"WORKSPACE_STATE_PENDING":     1,
		"WORKSPACE_STATE_SUBMITTED":   2,
		"WORKSPACE_STATE_ABANDONED":   3,
		"WORKSPACE_STATE_CONFLICTS":   4,
		"WORKSPACE_STATE_ROLLED_BACK": 5,
	}
)

func (x WorkspaceState) Enum() *WorkspaceState {
	p := new(WorkspaceState)
	*p = x
	return p
}

func (x WorkspaceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkspaceState) Descriptor() protoreflect.EnumDescriptor {
	return file_arista_workspace_v1_workspace_proto_enumTypes[0].Descriptor()
}

func (WorkspaceState) Type() protoreflect.EnumType {
	return &file_arista_workspace_v1_workspace_proto_enumTypes[0]
}

func (x WorkspaceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkspaceState.Descriptor instead.
func (WorkspaceState) EnumDescriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{0}
}

// Operations on a workspace that can be requested by a client.
// These are workspace-specific operations. The standard operations Add, Delete, etc.
// are performed via the standard ("core") APIs.
// This is an asynchronous request that returns immediately if the request is valid.
// The result of the operation will be available in WorkspaceStatus when it is generated.
type Request int32

const (
	Request_REQUEST_UNSPECIFIED  Request = 0
	Request_REQUEST_START_BUILD  Request = 1 // Start a new build
	Request_REQUEST_CANCEL_BUILD Request = 2 // Cancel any pending build
	Request_REQUEST_SUBMIT       Request = 3 // Submit the workspace (merge into mainline)
	Request_REQUEST_ABANDON      Request = 4 // Abandon the workspace. Not delete
	Request_REQUEST_ROLLBACK     Request = 5 // Rollback an already submitted workspace
)

// Enum value maps for Request.
var (
	Request_name = map[int32]string{
		0: "REQUEST_UNSPECIFIED",
		1: "REQUEST_START_BUILD",
		2: "REQUEST_CANCEL_BUILD",
		3: "REQUEST_SUBMIT",
		4: "REQUEST_ABANDON",
		5: "REQUEST_ROLLBACK",
	}
	Request_value = map[string]int32{
		"REQUEST_UNSPECIFIED":  0,
		"REQUEST_START_BUILD":  1,
		"REQUEST_CANCEL_BUILD": 2,
		"REQUEST_SUBMIT":       3,
		"REQUEST_ABANDON":      4,
		"REQUEST_ROLLBACK":     5,
	}
)

func (x Request) Enum() *Request {
	p := new(Request)
	*p = x
	return p
}

func (x Request) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Request) Descriptor() protoreflect.EnumDescriptor {
	return file_arista_workspace_v1_workspace_proto_enumTypes[1].Descriptor()
}

func (Request) Type() protoreflect.EnumType {
	return &file_arista_workspace_v1_workspace_proto_enumTypes[1]
}

func (x Request) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Request.Descriptor instead.
func (Request) EnumDescriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{1}
}

type ResponseStatus int32

const (
	ResponseStatus_RESPONSE_STATUS_UNSPECIFIED ResponseStatus = 0
	ResponseStatus_RESPONSE_STATUS_SUCCESS     ResponseStatus = 1
	ResponseStatus_RESPONSE_STATUS_FAIL        ResponseStatus = 2
)

// Enum value maps for ResponseStatus.
var (
	ResponseStatus_name = map[int32]string{
		0: "RESPONSE_STATUS_UNSPECIFIED",
		1: "RESPONSE_STATUS_SUCCESS",
		2: "RESPONSE_STATUS_FAIL",
	}
	ResponseStatus_value = map[string]int32{
		"RESPONSE_STATUS_UNSPECIFIED": 0,
		"RESPONSE_STATUS_SUCCESS":     1,
		"RESPONSE_STATUS_FAIL":        2,
	}
)

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}

func (x ResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_arista_workspace_v1_workspace_proto_enumTypes[2].Descriptor()
}

func (ResponseStatus) Type() protoreflect.EnumType {
	return &file_arista_workspace_v1_workspace_proto_enumTypes[2]
}

func (x ResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseStatus.Descriptor instead.
func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{2}
}

type BuildState int32

const (
	BuildState_BUILD_STATE_UNSPECIFIED BuildState = 0
	BuildState_BUILD_STATE_IN_PROGRESS BuildState = 1
	BuildState_BUILD_STATE_CANCELED    BuildState = 2
	BuildState_BUILD_STATE_SUCCESS     BuildState = 3
	BuildState_BUILD_STATE_FAIL        BuildState = 4
)

// Enum value maps for BuildState.
var (
	BuildState_name = map[int32]string{
		0: "BUILD_STATE_UNSPECIFIED",
		1: "BUILD_STATE_IN_PROGRESS",
		2: "BUILD_STATE_CANCELED",
		3: "BUILD_STATE_SUCCESS",
		4: "BUILD_STATE_FAIL",
	}
	BuildState_value = map[string]int32{
		"BUILD_STATE_UNSPECIFIED": 0,
		"BUILD_STATE_IN_PROGRESS": 1,
		"BUILD_STATE_CANCELED":    2,
		"BUILD_STATE_SUCCESS":     3,
		"BUILD_STATE_FAIL":        4,
	}
)

func (x BuildState) Enum() *BuildState {
	p := new(BuildState)
	*p = x
	return p
}

func (x BuildState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildState) Descriptor() protoreflect.EnumDescriptor {
	return file_arista_workspace_v1_workspace_proto_enumTypes[3].Descriptor()
}

func (BuildState) Type() protoreflect.EnumType {
	return &file_arista_workspace_v1_workspace_proto_enumTypes[3]
}

func (x BuildState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildState.Descriptor instead.
func (BuildState) EnumDescriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{3}
}

// BuildStage is the stage of a workspace build
type BuildStage int32

const (
	BuildStage_BUILD_STAGE_UNSPECIFIED       BuildStage = 0
	BuildStage_BUILD_STAGE_INPUT_VALIDATION  BuildStage = 1
	BuildStage_BUILD_STAGE_CONFIGLET_BUILD   BuildStage = 2
	BuildStage_BUILD_STAGE_CONFIG_VALIDATION BuildStage = 3
)

// Enum value maps for BuildStage.
var (
	BuildStage_name = map[int32]string{
		0: "BUILD_STAGE_UNSPECIFIED",
		1: "BUILD_STAGE_INPUT_VALIDATION",
		2: "BUILD_STAGE_CONFIGLET_BUILD",
		3: "BUILD_STAGE_CONFIG_VALIDATION",
	}
	BuildStage_value = map[string]int32{
		"BUILD_STAGE_UNSPECIFIED":       0,
		"BUILD_STAGE_INPUT_VALIDATION":  1,
		"BUILD_STAGE_CONFIGLET_BUILD":   2,
		"BUILD_STAGE_CONFIG_VALIDATION": 3,
	}
)

func (x BuildStage) Enum() *BuildStage {
	p := new(BuildStage)
	*p = x
	return p
}

func (x BuildStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildStage) Descriptor() protoreflect.EnumDescriptor {
	return file_arista_workspace_v1_workspace_proto_enumTypes[4].Descriptor()
}

func (BuildStage) Type() protoreflect.EnumType {
	return &file_arista_workspace_v1_workspace_proto_enumTypes[4]
}

func (x BuildStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildStage.Descriptor instead.
func (BuildStage) EnumDescriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{4}
}

// RequestParams is the parameters associated with a WorkspaceRequest
type RequestParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *RequestParams) Reset() {
	*x = RequestParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestParams) ProtoMessage() {}

func (x *RequestParams) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestParams.ProtoReflect.Descriptor instead.
func (*RequestParams) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{0}
}

func (x *RequestParams) GetRequestId() *wrapperspb.StringValue {
	if x != nil {
		return x.RequestId
	}
	return nil
}

// Response is the response to the last Request, typically errors in processing
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  ResponseStatus          `protobuf:"varint,1,opt,name=status,proto3,enum=arista.workspace.v1.ResponseStatus" json:"status,omitempty"`
	Message *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_RESPONSE_STATUS_UNSPECIFIED
}

func (x *Response) GetMessage() *wrapperspb.StringValue {
	if x != nil {
		return x.Message
	}
	return nil
}

// Responses is the map of all request ID to response that are processed so far
type Responses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]*Response `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Responses) Reset() {
	*x = Responses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Responses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Responses) ProtoMessage() {}

func (x *Responses) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Responses.ProtoReflect.Descriptor instead.
func (*Responses) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{2}
}

func (x *Responses) GetValues() map[string]*Response {
	if x != nil {
		return x.Values
	}
	return nil
}

// WorkspaceKey is the key to get a workspace's status
type WorkspaceKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
}

func (x *WorkspaceKey) Reset() {
	*x = WorkspaceKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceKey) ProtoMessage() {}

func (x *WorkspaceKey) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceKey.ProtoReflect.Descriptor instead.
func (*WorkspaceKey) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{3}
}

func (x *WorkspaceKey) GetWorkspaceId() *wrapperspb.StringValue {
	if x != nil {
		return x.WorkspaceId
	}
	return nil
}

// WorkspaceConfig represents the configurable parameters of a workspace
type WorkspaceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           *WorkspaceKey           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	DisplayName   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description   *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Request       Request                 `protobuf:"varint,4,opt,name=request,proto3,enum=arista.workspace.v1.Request" json:"request,omitempty"`
	RequestParams *RequestParams          `protobuf:"bytes,5,opt,name=request_params,json=requestParams,proto3" json:"request_params,omitempty"`
}

func (x *WorkspaceConfig) Reset() {
	*x = WorkspaceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceConfig) ProtoMessage() {}

func (x *WorkspaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceConfig.ProtoReflect.Descriptor instead.
func (*WorkspaceConfig) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{4}
}

func (x *WorkspaceConfig) GetKey() *WorkspaceKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *WorkspaceConfig) GetDisplayName() *wrapperspb.StringValue {
	if x != nil {
		return x.DisplayName
	}
	return nil
}

func (x *WorkspaceConfig) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *WorkspaceConfig) GetRequest() Request {
	if x != nil {
		return x.Request
	}
	return Request_REQUEST_UNSPECIFIED
}

func (x *WorkspaceConfig) GetRequestParams() *RequestParams {
	if x != nil {
		return x.RequestParams
	}
	return nil
}

// Workspace is the status of a workspace
type Workspace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            *WorkspaceKey           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	CreatedAt      *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy      *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	LastModifiedAt *timestamppb.Timestamp  `protobuf:"bytes,4,opt,name=last_modified_at,json=lastModifiedAt,proto3" json:"last_modified_at,omitempty"`
	LastModifiedBy *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=last_modified_by,json=lastModifiedBy,proto3" json:"last_modified_by,omitempty"`
	State          WorkspaceState          `protobuf:"varint,6,opt,name=state,proto3,enum=arista.workspace.v1.WorkspaceState" json:"state,omitempty"`
	LastBuildId    *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=last_build_id,json=lastBuildId,proto3" json:"last_build_id,omitempty"`
	Responses      *Responses              `protobuf:"bytes,8,opt,name=responses,proto3" json:"responses,omitempty"`
	CcIds          *fmp.RepeatedString     `protobuf:"bytes,9,opt,name=cc_ids,json=ccIds,proto3" json:"cc_ids,omitempty"` // Change Controls created by submitting this workspace
}

func (x *Workspace) Reset() {
	*x = Workspace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workspace) ProtoMessage() {}

func (x *Workspace) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workspace.ProtoReflect.Descriptor instead.
func (*Workspace) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{5}
}

func (x *Workspace) GetKey() *WorkspaceKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Workspace) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Workspace) GetCreatedBy() *wrapperspb.StringValue {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Workspace) GetLastModifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModifiedAt
	}
	return nil
}

func (x *Workspace) GetLastModifiedBy() *wrapperspb.StringValue {
	if x != nil {
		return x.LastModifiedBy
	}
	return nil
}

func (x *Workspace) GetState() WorkspaceState {
	if x != nil {
		return x.State
	}
	return WorkspaceState_WORKSPACE_STATE_UNSPECIFIED
}

func (x *Workspace) GetLastBuildId() *wrapperspb.StringValue {
	if x != nil {
		return x.LastBuildId
	}
	return nil
}

func (x *Workspace) GetResponses() *Responses {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *Workspace) GetCcIds() *fmp.RepeatedString {
	if x != nil {
		return x.CcIds
	}
	return nil
}

// InputError represents an error in an input field, with either schema or value
type InputError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"` // ID of the field
	Path    *fmp.RepeatedString     `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`                      // Path leading up to the field
	Members *fmp.RepeatedString     `protobuf:"bytes,3,opt,name=members,proto3" json:"members,omitempty"`                // Members of the field
	Message *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`                // The error message
}

func (x *InputError) Reset() {
	*x = InputError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputError) ProtoMessage() {}

func (x *InputError) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputError.ProtoReflect.Descriptor instead.
func (*InputError) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{6}
}

func (x *InputError) GetFieldId() *wrapperspb.StringValue {
	if x != nil {
		return x.FieldId
	}
	return nil
}

func (x *InputError) GetPath() *fmp.RepeatedString {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *InputError) GetMembers() *fmp.RepeatedString {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *InputError) GetMessage() *wrapperspb.StringValue {
	if x != nil {
		return x.Message
	}
	return nil
}

// InputErrors is the nullable list of InputError
type InputErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*InputError `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *InputErrors) Reset() {
	*x = InputErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputErrors) ProtoMessage() {}

func (x *InputErrors) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputErrors.ProtoReflect.Descriptor instead.
func (*InputErrors) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{7}
}

func (x *InputErrors) GetValues() []*InputError {
	if x != nil {
		return x.Values
	}
	return nil
}

// InputValidationResult is the result of input validation of a studio
type InputValidationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputSchemaErrors *InputErrors        `protobuf:"bytes,1,opt,name=input_schema_errors,json=inputSchemaErrors,proto3" json:"input_schema_errors,omitempty"`
	InputValueErrors  *InputErrors        `protobuf:"bytes,2,opt,name=input_value_errors,json=inputValueErrors,proto3" json:"input_value_errors,omitempty"`
	OtherErrors       *fmp.RepeatedString `protobuf:"bytes,3,opt,name=other_errors,json=otherErrors,proto3" json:"other_errors,omitempty"`
}

func (x *InputValidationResult) Reset() {
	*x = InputValidationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputValidationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputValidationResult) ProtoMessage() {}

func (x *InputValidationResult) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputValidationResult.ProtoReflect.Descriptor instead.
func (*InputValidationResult) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{8}
}

func (x *InputValidationResult) GetInputSchemaErrors() *InputErrors {
	if x != nil {
		return x.InputSchemaErrors
	}
	return nil
}

func (x *InputValidationResult) GetInputValueErrors() *InputErrors {
	if x != nil {
		return x.InputValueErrors
	}
	return nil
}

func (x *InputValidationResult) GetOtherErrors() *fmp.RepeatedString {
	if x != nil {
		return x.OtherErrors
	}
	return nil
}

// InputValidationResults is the result of input validation, one per studio
type InputValidationResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]*InputValidationResult `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *InputValidationResults) Reset() {
	*x = InputValidationResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputValidationResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputValidationResults) ProtoMessage() {}

func (x *InputValidationResults) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputValidationResults.ProtoReflect.Descriptor instead.
func (*InputValidationResults) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{9}
}

func (x *InputValidationResults) GetValues() map[string]*InputValidationResult {
	if x != nil {
		return x.Values
	}
	return nil
}

// TemplateError represents a single error generated by a template evaluation
type TemplateError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LineNum   *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=line_num,json=lineNum,proto3" json:"line_num,omitempty"` // Line on which the error occurred
	Exception *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=exception,proto3" json:"exception,omitempty"`            // The exception type
	Detail    *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`                  // Backtrace, etc.
}

func (x *TemplateError) Reset() {
	*x = TemplateError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateError) ProtoMessage() {}

func (x *TemplateError) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateError.ProtoReflect.Descriptor instead.
func (*TemplateError) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{10}
}

func (x *TemplateError) GetLineNum() *wrapperspb.UInt32Value {
	if x != nil {
		return x.LineNum
	}
	return nil
}

func (x *TemplateError) GetException() *wrapperspb.StringValue {
	if x != nil {
		return x.Exception
	}
	return nil
}

func (x *TemplateError) GetDetail() *wrapperspb.StringValue {
	if x != nil {
		return x.Detail
	}
	return nil
}

// TemplateErrors is the nullable list of TemplateError
type TemplateErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*TemplateError `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *TemplateErrors) Reset() {
	*x = TemplateErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateErrors) ProtoMessage() {}

func (x *TemplateErrors) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateErrors.ProtoReflect.Descriptor instead.
func (*TemplateErrors) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{11}
}

func (x *TemplateErrors) GetValues() []*TemplateError {
	if x != nil {
		return x.Values
	}
	return nil
}

// ConfigletBuildResult is the output of configlet (template) build
type ConfigletBuildResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateErrors  *TemplateErrors         `protobuf:"bytes,1,opt,name=template_errors,json=templateErrors,proto3" json:"template_errors,omitempty"`
	GeneratedConfig *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=generated_config,json=generatedConfig,proto3" json:"generated_config,omitempty"`
}

func (x *ConfigletBuildResult) Reset() {
	*x = ConfigletBuildResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigletBuildResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigletBuildResult) ProtoMessage() {}

func (x *ConfigletBuildResult) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigletBuildResult.ProtoReflect.Descriptor instead.
func (*ConfigletBuildResult) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigletBuildResult) GetTemplateErrors() *TemplateErrors {
	if x != nil {
		return x.TemplateErrors
	}
	return nil
}

func (x *ConfigletBuildResult) GetGeneratedConfig() *wrapperspb.StringValue {
	if x != nil {
		return x.GeneratedConfig
	}
	return nil
}

// ConfigletBuildResults is the output of configlet build, one per studio
type ConfigletBuildResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]*ConfigletBuildResult `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConfigletBuildResults) Reset() {
	*x = ConfigletBuildResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigletBuildResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigletBuildResults) ProtoMessage() {}

func (x *ConfigletBuildResults) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigletBuildResults.ProtoReflect.Descriptor instead.
func (*ConfigletBuildResults) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{13}
}

func (x *ConfigletBuildResults) GetValues() map[string]*ConfigletBuildResult {
	if x != nil {
		return x.Values
	}
	return nil
}

// ConfigValidationResult is the result of validating config with an EOS device
type ConfigValidationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary  *configstatus_v1.ConfigSummary `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	Errors   *configstatus_v1.ConfigErrors  `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	Warnings *configstatus_v1.ConfigErrors  `protobuf:"bytes,3,opt,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *ConfigValidationResult) Reset() {
	*x = ConfigValidationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigValidationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigValidationResult) ProtoMessage() {}

func (x *ConfigValidationResult) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigValidationResult.ProtoReflect.Descriptor instead.
func (*ConfigValidationResult) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{14}
}

func (x *ConfigValidationResult) GetSummary() *configstatus_v1.ConfigSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *ConfigValidationResult) GetErrors() *configstatus_v1.ConfigErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ConfigValidationResult) GetWarnings() *configstatus_v1.ConfigErrors {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// BuildResult is the per-device build output
type BuildResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State                  BuildState              `protobuf:"varint,1,opt,name=state,proto3,enum=arista.workspace.v1.BuildState" json:"state,omitempty"`
	Stage                  BuildStage              `protobuf:"varint,2,opt,name=stage,proto3,enum=arista.workspace.v1.BuildStage" json:"stage,omitempty"`
	InputValidationResults *InputValidationResults `protobuf:"bytes,3,opt,name=input_validation_results,json=inputValidationResults,proto3" json:"input_validation_results,omitempty"`
	ConfigletBuildResults  *ConfigletBuildResults  `protobuf:"bytes,4,opt,name=configlet_build_results,json=configletBuildResults,proto3" json:"configlet_build_results,omitempty"`
	ConfigValidationResult *ConfigValidationResult `protobuf:"bytes,5,opt,name=config_validation_result,json=configValidationResult,proto3" json:"config_validation_result,omitempty"`
}

func (x *BuildResult) Reset() {
	*x = BuildResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildResult) ProtoMessage() {}

func (x *BuildResult) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildResult.ProtoReflect.Descriptor instead.
func (*BuildResult) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{15}
}

func (x *BuildResult) GetState() BuildState {
	if x != nil {
		return x.State
	}
	return BuildState_BUILD_STATE_UNSPECIFIED
}

func (x *BuildResult) GetStage() BuildStage {
	if x != nil {
		return x.Stage
	}
	return BuildStage_BUILD_STAGE_UNSPECIFIED
}

func (x *BuildResult) GetInputValidationResults() *InputValidationResults {
	if x != nil {
		return x.InputValidationResults
	}
	return nil
}

func (x *BuildResult) GetConfigletBuildResults() *ConfigletBuildResults {
	if x != nil {
		return x.ConfigletBuildResults
	}
	return nil
}

func (x *BuildResult) GetConfigValidationResult() *ConfigValidationResult {
	if x != nil {
		return x.ConfigValidationResult
	}
	return nil
}

// BuildResults is the build output for all devices, indexed by device ID
type BuildResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values map[string]*BuildResult `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BuildResults) Reset() {
	*x = BuildResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildResults) ProtoMessage() {}

func (x *BuildResults) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildResults.ProtoReflect.Descriptor instead.
func (*BuildResults) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{16}
}

func (x *BuildResults) GetValues() map[string]*BuildResult {
	if x != nil {
		return x.Values
	}
	return nil
}

// WorkspaceBuildKey is the key to get the build result for a workspace
type WorkspaceBuildKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// workspace_id is a required field which represents workspace ID
	WorkspaceId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// build_id is a required field which represents build ID
	BuildId *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
}

func (x *WorkspaceBuildKey) Reset() {
	*x = WorkspaceBuildKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceBuildKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceBuildKey) ProtoMessage() {}

func (x *WorkspaceBuildKey) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceBuildKey.ProtoReflect.Descriptor instead.
func (*WorkspaceBuildKey) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{17}
}

func (x *WorkspaceBuildKey) GetWorkspaceId() *wrapperspb.StringValue {
	if x != nil {
		return x.WorkspaceId
	}
	return nil
}

func (x *WorkspaceBuildKey) GetBuildId() *wrapperspb.StringValue {
	if x != nil {
		return x.BuildId
	}
	return nil
}

// WorkspaceBuild is the result, or output of a workspace build
// This includes results for all devices across all studios in the workspace
type WorkspaceBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          *WorkspaceBuildKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	State        BuildState         `protobuf:"varint,2,opt,name=state,proto3,enum=arista.workspace.v1.BuildState" json:"state,omitempty"`
	BuildResults *BuildResults      `protobuf:"bytes,3,opt,name=build_results,json=buildResults,proto3" json:"build_results,omitempty"`
}

func (x *WorkspaceBuild) Reset() {
	*x = WorkspaceBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_workspace_v1_workspace_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceBuild) ProtoMessage() {}

func (x *WorkspaceBuild) ProtoReflect() protoreflect.Message {
	mi := &file_arista_workspace_v1_workspace_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceBuild.ProtoReflect.Descriptor instead.
func (*WorkspaceBuild) Descriptor() ([]byte, []int) {
	return file_arista_workspace_v1_workspace_proto_rawDescGZIP(), []int{18}
}

func (x *WorkspaceBuild) GetKey() *WorkspaceBuildKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *WorkspaceBuild) GetState() BuildState {
	if x != nil {
		return x.State
	}
	return BuildState_BUILD_STATE_UNSPECIFIED
}

func (x *WorkspaceBuild) GetBuildResults() *BuildResults {
	if x != nil {
		return x.BuildResults
	}
	return nil
}

var File_arista_workspace_v1_workspace_proto protoreflect.FileDescriptor

var file_arista_workspace_v1_workspace_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x66, 0x6d, 0x70, 0x2f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x12, 0x66, 0x6d, 0x70, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x4c, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x7f,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x69,
	0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xa9, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x42, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x1a, 0x58, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x55, 0x0a, 0x0c, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x3a, 0x04, 0x80, 0x8e,
	0x19, 0x01, 0x22, 0xd2, 0x02, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x3a,
	0x06, 0xfa, 0x8d, 0x19, 0x02, 0x72, 0x77, 0x22, 0xb5, 0x04, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x44, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x3c, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x63,
	0x63, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x6d,
	0x70, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x05, 0x63, 0x63, 0x49, 0x64, 0x73, 0x3a, 0x06, 0xfa, 0x8d, 0x19, 0x02, 0x72, 0x6f, 0x22,
	0xd5, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x37,
	0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x6d, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x66, 0x6d, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x36, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0xf1, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x50, 0x0a, 0x13, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x11, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x4e, 0x0a, 0x12, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x66, 0x6d, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x4f,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a,
	0x65, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xba, 0x01, 0x0a, 0x0d, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x3a, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x4c, 0x0a, 0x0e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x22, 0xad, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x65, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x0f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x0e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0xcd, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x65, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x72,
	0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x64, 0x0a, 0x0b, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72,
	0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xd9, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x3c, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xad, 0x03,
	0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61,
	0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x65, 0x0a, 0x18, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x16, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x62, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x65, 0x74, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x6c, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52,
	0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x65, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb2, 0x01,
	0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x45,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x5b, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x3a, 0x04, 0x80, 0x8e, 0x19, 0x01, 0x22, 0xd1, 0x01, 0x0a, 0x0e, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x38, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4b, 0x65, 0x79,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0d,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x3a, 0x06, 0xfa, 0x8d, 0x19, 0x02, 0x72, 0x6f, 0x2a, 0xcc, 0x01, 0x0a,
	0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x1b, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1b, 0x0a, 0x17, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1d, 0x0a,
	0x19, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19,
	0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x41, 0x42, 0x41, 0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x57,
	0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x53, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x57, 0x4f,
	0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x4f,
	0x4c, 0x4c, 0x45, 0x44, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x05, 0x2a, 0x94, 0x01, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x42, 0x55, 0x49, 0x4c,
	0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53,
	0x55, 0x42, 0x4d, 0x49, 0x54, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x41, 0x42, 0x41, 0x4e, 0x44, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x4c, 0x42, 0x41, 0x43, 0x4b,
	0x10, 0x05, 0x2a, 0x68, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x2a, 0x8f, 0x01, 0x0a,
	0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x55, 0x49, 0x4c,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x17, 0x0a, 0x13, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x55, 0x49, 0x4c,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x04, 0x2a, 0x8f,
	0x01, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x17, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x55,
	0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b,
	0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x4c, 0x45, 0x54, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x02, 0x12, 0x21, 0x0a,
	0x1d, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03,
	0x42, 0x30, 0x5a, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x3b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_arista_workspace_v1_workspace_proto_rawDescOnce sync.Once
	file_arista_workspace_v1_workspace_proto_rawDescData = file_arista_workspace_v1_workspace_proto_rawDesc
)

func file_arista_workspace_v1_workspace_proto_rawDescGZIP() []byte {
	file_arista_workspace_v1_workspace_proto_rawDescOnce.Do(func() {
		file_arista_workspace_v1_workspace_proto_rawDescData = protoimpl.X.CompressGZIP(file_arista_workspace_v1_workspace_proto_rawDescData)
	})
	return file_arista_workspace_v1_workspace_proto_rawDescData
}

var file_arista_workspace_v1_workspace_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_arista_workspace_v1_workspace_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_arista_workspace_v1_workspace_proto_goTypes = []interface{}{
	(WorkspaceState)(0),                   // 0: arista.workspace.v1.WorkspaceState
	(Request)(0),                          // 1: arista.workspace.v1.Request
	(ResponseStatus)(0),                   // 2: arista.workspace.v1.ResponseStatus
	(BuildState)(0),                       // 3: arista.workspace.v1.BuildState
	(BuildStage)(0),                       // 4: arista.workspace.v1.BuildStage
	(*RequestParams)(nil),                 // 5: arista.workspace.v1.RequestParams
	(*Response)(nil),                      // 6: arista.workspace.v1.Response
	(*Responses)(nil),                     // 7: arista.workspace.v1.Responses
	(*WorkspaceKey)(nil),                  // 8: arista.workspace.v1.WorkspaceKey
	(*WorkspaceConfig)(nil),               // 9: arista.workspace.v1.WorkspaceConfig
	(*Workspace)(nil),                     // 10: arista.workspace.v1.Workspace
	(*InputError)(nil),                    // 11: arista.workspace.v1.InputError
	(*InputErrors)(nil),                   // 12: arista.workspace.v1.InputErrors
	(*InputValidationResult)(nil),         // 13: arista.workspace.v1.InputValidationResult
	(*InputValidationResults)(nil),        // 14: arista.workspace.v1.InputValidationResults
	(*TemplateError)(nil),                 // 15: arista.workspace.v1.TemplateError
	(*TemplateErrors)(nil),                // 16: arista.workspace.v1.TemplateErrors
	(*ConfigletBuildResult)(nil),          // 17: arista.workspace.v1.ConfigletBuildResult
	(*ConfigletBuildResults)(nil),         // 18: arista.workspace.v1.ConfigletBuildResults
	(*ConfigValidationResult)(nil),        // 19: arista.workspace.v1.ConfigValidationResult
	(*BuildResult)(nil),                   // 20: arista.workspace.v1.BuildResult
	(*BuildResults)(nil),                  // 21: arista.workspace.v1.BuildResults
	(*WorkspaceBuildKey)(nil),             // 22: arista.workspace.v1.WorkspaceBuildKey
	(*WorkspaceBuild)(nil),                // 23: arista.workspace.v1.WorkspaceBuild
	nil,                                   // 24: arista.workspace.v1.Responses.ValuesEntry
	nil,                                   // 25: arista.workspace.v1.InputValidationResults.ValuesEntry
	nil,                                   // 26: arista.workspace.v1.ConfigletBuildResults.ValuesEntry
	nil,                                   // 27: arista.workspace.v1.BuildResults.ValuesEntry
	(*wrapperspb.StringValue)(nil),        // 28: google.protobuf.StringValue
	(*timestamppb.Timestamp)(nil),         // 29: google.protobuf.Timestamp
	(*fmp.RepeatedString)(nil),            // 30: fmp.RepeatedString
	(*wrapperspb.UInt32Value)(nil),        // 31: google.protobuf.UInt32Value
	(*configstatus_v1.ConfigSummary)(nil), // 32: arista.configstatus.v1.ConfigSummary
	(*configstatus_v1.ConfigErrors)(nil),  // 33: arista.configstatus.v1.ConfigErrors
}
var file_arista_workspace_v1_workspace_proto_depIdxs = []int32{
	28, // 0: arista.workspace.v1.RequestParams.request_id:type_name -> google.protobuf.StringValue
	2,  // 1: arista.workspace.v1.Response.status:type_name -> arista.workspace.v1.ResponseStatus
	28, // 2: arista.workspace.v1.Response.message:type_name -> google.protobuf.StringValue
	24, // 3: arista.workspace.v1.Responses.values:type_name -> arista.workspace.v1.Responses.ValuesEntry
	28, // 4: arista.workspace.v1.WorkspaceKey.workspace_id:type_name -> google.protobuf.StringValue
	8,  // 5: arista.workspace.v1.WorkspaceConfig.key:type_name -> arista.workspace.v1.WorkspaceKey
	28, // 6: arista.workspace.v1.WorkspaceConfig.display_name:type_name -> google.protobuf.StringValue
	28, // 7: arista.workspace.v1.WorkspaceConfig.description:type_name -> google.protobuf.StringValue
	1,  // 8: arista.workspace.v1.WorkspaceConfig.request:type_name -> arista.workspace.v1.Request
	5,  // 9: arista.workspace.v1.WorkspaceConfig.request_params:type_name -> arista.workspace.v1.RequestParams
	8,  // 10: arista.workspace.v1.Workspace.key:type_name -> arista.workspace.v1.WorkspaceKey
	29, // 11: arista.workspace.v1.Workspace.created_at:type_name -> google.protobuf.Timestamp
	28, // 12: arista.workspace.v1.Workspace.created_by:type_name -> google.protobuf.StringValue
	29, // 13: arista.workspace.v1.Workspace.last_modified_at:type_name -> google.protobuf.Timestamp
	28, // 14: arista.workspace.v1.Workspace.last_modified_by:type_name -> google.protobuf.StringValue
	0,  // 15: arista.workspace.v1.Workspace.state:type_name -> arista.workspace.v1.WorkspaceState
	28, // 16: arista.workspace.v1.Workspace.last_build_id:type_name -> google.protobuf.StringValue
	7,  // 17: arista.workspace.v1.Workspace.responses:type_name -> arista.workspace.v1.Responses
	30, // 18: arista.workspace.v1.Workspace.cc_ids:type_name -> fmp.RepeatedString
	28, // 19: arista.workspace.v1.InputError.field_id:type_name -> google.protobuf.StringValue
	30, // 20: arista.workspace.v1.InputError.path:type_name -> fmp.RepeatedString
	30, // 21: arista.workspace.v1.InputError.members:type_name -> fmp.RepeatedString
	28, // 22: arista.workspace.v1.InputError.message:type_name -> google.protobuf.StringValue
	11, // 23: arista.workspace.v1.InputErrors.values:type_name -> arista.workspace.v1.InputError
	12, // 24: arista.workspace.v1.InputValidationResult.input_schema_errors:type_name -> arista.workspace.v1.InputErrors
	12, // 25: arista.workspace.v1.InputValidationResult.input_value_errors:type_name -> arista.workspace.v1.InputErrors
	30, // 26: arista.workspace.v1.InputValidationResult.other_errors:type_name -> fmp.RepeatedString
	25, // 27: arista.workspace.v1.InputValidationResults.values:type_name -> arista.workspace.v1.InputValidationResults.ValuesEntry
	31, // 28: arista.workspace.v1.TemplateError.line_num:type_name -> google.protobuf.UInt32Value
	28, // 29: arista.workspace.v1.TemplateError.exception:type_name -> google.protobuf.StringValue
	28, // 30: arista.workspace.v1.TemplateError.detail:type_name -> google.protobuf.StringValue
	15, // 31: arista.workspace.v1.TemplateErrors.values:type_name -> arista.workspace.v1.TemplateError
	16, // 32: arista.workspace.v1.ConfigletBuildResult.template_errors:type_name -> arista.workspace.v1.TemplateErrors
	28, // 33: arista.workspace.v1.ConfigletBuildResult.generated_config:type_name -> google.protobuf.StringValue
	26, // 34: arista.workspace.v1.ConfigletBuildResults.values:type_name -> arista.workspace.v1.ConfigletBuildResults.ValuesEntry
	32, // 35: arista.workspace.v1.ConfigValidationResult.summary:type_name -> arista.configstatus.v1.ConfigSummary
	33, // 36: arista.workspace.v1.ConfigValidationResult.errors:type_name -> arista.configstatus.v1.ConfigErrors
	33, // 37: arista.workspace.v1.ConfigValidationResult.warnings:type_name -> arista.configstatus.v1.ConfigErrors
	3,  // 38: arista.workspace.v1.BuildResult.state:type_name -> arista.workspace.v1.BuildState
	4,  // 39: arista.workspace.v1.BuildResult.stage:type_name -> arista.workspace.v1.BuildStage
	14, // 40: arista.workspace.v1.BuildResult.input_validation_results:type_name -> arista.workspace.v1.InputValidationResults
	18, // 41: arista.workspace.v1.BuildResult.configlet_build_results:type_name -> arista.workspace.v1.ConfigletBuildResults
	19, // 42: arista.workspace.v1.BuildResult.config_validation_result:type_name -> arista.workspace.v1.ConfigValidationResult
	27, // 43: arista.workspace.v1.BuildResults.values:type_name -> arista.workspace.v1.BuildResults.ValuesEntry
	28, // 44: arista.workspace.v1.WorkspaceBuildKey.workspace_id:type_name -> google.protobuf.StringValue
	28, // 45: arista.workspace.v1.WorkspaceBuildKey.build_id:type_name -> google.protobuf.StringValue
	22, // 46: arista.workspace.v1.WorkspaceBuild.key:type_name -> arista.workspace.v1.WorkspaceBuildKey
	3,  // 47: arista.workspace.v1.WorkspaceBuild.state:type_name -> arista.workspace.v1.BuildState
	21, // 48: arista.workspace.v1.WorkspaceBuild.build_results:type_name -> arista.workspace.v1.BuildResults
	6,  // 49: arista.workspace.v1.Responses.ValuesEntry.value:type_name -> arista.workspace.v1.Response
	13, // 50: arista.workspace.v1.InputValidationResults.ValuesEntry.value:type_name -> arista.workspace.v1.InputValidationResult
	17, // 51: arista.workspace.v1.ConfigletBuildResults.ValuesEntry.value:type_name -> arista.workspace.v1.ConfigletBuildResult
	20, // 52: arista.workspace.v1.BuildResults.ValuesEntry.value:type_name -> arista.workspace.v1.BuildResult
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_arista_workspace_v1_workspace_proto_init() }
func file_arista_workspace_v1_workspace_proto_init() {
	if File_arista_workspace_v1_workspace_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_arista_workspace_v1_workspace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Responses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workspace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputValidationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputValidationResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigletBuildResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigletBuildResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigValidationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceBuildKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_workspace_v1_workspace_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_arista_workspace_v1_workspace_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_arista_workspace_v1_workspace_proto_goTypes,
		DependencyIndexes: file_arista_workspace_v1_workspace_proto_depIdxs,
		EnumInfos:         file_arista_workspace_v1_workspace_proto_enumTypes,
		MessageInfos:      file_arista_workspace_v1_workspace_proto_msgTypes,
	}.Build()
	File_arista_workspace_v1_workspace_proto = out.File
	file_arista_workspace_v1_workspace_proto_rawDesc = nil
	file_arista_workspace_v1_workspace_proto_goTypes = nil
	file_arista_workspace_v1_workspace_proto_depIdxs = nil
}

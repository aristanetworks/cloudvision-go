// Copyright (c) 2023 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.
// Subject to Arista Networks, Inc.'s EULA.
// FOR INTERNAL USE ONLY. NOT FOR DISTRIBUTION.

//
// Code generated by boomtown. DO NOT EDIT.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.7
// source: arista/alert.v1/services.gen.proto

package alert

import (
	subscriptions "github.com/aristanetworks/cloudvision-go/api/arista/subscriptions"
	time "github.com/aristanetworks/cloudvision-go/api/arista/time"
	fmp "github.com/aristanetworks/cloudvision-go/api/fmp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time indicates the time for which you are interested in the data.
	// If no time is given, the server will use the time at which it makes the request.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AlertRequest) Reset() {
	*x = AlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRequest) ProtoMessage() {}

func (x *AlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRequest.ProtoReflect.Descriptor instead.
func (*AlertRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{0}
}

func (x *AlertRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type AlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value is the value requested.
	// This structure will be fully-populated as it exists in the datastore. If
	// optional fields were not given at creation, these fields will be empty or
	// set to default values.
	Value *Alert `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Time carries the (UTC) timestamp of the last-modification of the
	// Alert instance in this response.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AlertResponse) Reset() {
	*x = AlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertResponse) ProtoMessage() {}

func (x *AlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertResponse.ProtoReflect.Descriptor instead.
func (*AlertResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{1}
}

func (x *AlertResponse) GetValue() *Alert {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AlertResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type AlertStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TimeRange allows limiting response data to within a specified time window.
	// If this field is populated, at least one of the two time fields are required.
	//
	// For GetAll, the fields start and end can be used as follows:
	//
	//   * end: Returns the state of each Alert at end.
	//     * Each Alert response is fully-specified (all fields set).
	//   * start: Returns the state of each Alert at start, followed by updates until now.
	//     * Each Alert response at start is fully-specified, but updates may be partial.
	//   * start and end: Returns the state of each Alert at start, followed by updates
	//     until end.
	//     * Each Alert response at start is fully-specified, but updates until end may
	//       be partial.
	//
	// This field is not allowed in the Subscribe RPC.
	Time *time.TimeBounds `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AlertStreamRequest) Reset() {
	*x = AlertStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertStreamRequest) ProtoMessage() {}

func (x *AlertStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertStreamRequest.ProtoReflect.Descriptor instead.
func (*AlertStreamRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{2}
}

func (x *AlertStreamRequest) GetTime() *time.TimeBounds {
	if x != nil {
		return x.Time
	}
	return nil
}

type AlertStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value is a value deemed relevant to the initiating request.
	// This structure will always have its key-field populated. Which other fields are
	// populated, and why, depends on the value of Operation and what triggered this notification.
	Value *Alert `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Time holds the timestamp of this Alert's last modification.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Operation indicates how the Alert value in this response should be considered.
	// Under non-subscribe requests, this value should always be INITIAL. In a subscription,
	// once all initial data is streamed and the client begins to receive modification updates,
	// you should not see INITIAL again.
	Type subscriptions.Operation `protobuf:"varint,3,opt,name=type,proto3,enum=arista.subscriptions.Operation" json:"type,omitempty"`
}

func (x *AlertStreamResponse) Reset() {
	*x = AlertStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertStreamResponse) ProtoMessage() {}

func (x *AlertStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertStreamResponse.ProtoReflect.Descriptor instead.
func (*AlertStreamResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{3}
}

func (x *AlertStreamResponse) GetValue() *Alert {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AlertStreamResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AlertStreamResponse) GetType() subscriptions.Operation {
	if x != nil {
		return x.Type
	}
	return subscriptions.Operation_UNSPECIFIED
}

type AlertConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time indicates the time for which you are interested in the data.
	// If no time is given, the server will use the time at which it makes the request.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AlertConfigRequest) Reset() {
	*x = AlertConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConfigRequest) ProtoMessage() {}

func (x *AlertConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConfigRequest.ProtoReflect.Descriptor instead.
func (*AlertConfigRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{4}
}

func (x *AlertConfigRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type AlertConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value is the value requested.
	// This structure will be fully-populated as it exists in the datastore. If
	// optional fields were not given at creation, these fields will be empty or
	// set to default values.
	Value *AlertConfig `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Time carries the (UTC) timestamp of the last-modification of the
	// AlertConfig instance in this response.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AlertConfigResponse) Reset() {
	*x = AlertConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConfigResponse) ProtoMessage() {}

func (x *AlertConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConfigResponse.ProtoReflect.Descriptor instead.
func (*AlertConfigResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{5}
}

func (x *AlertConfigResponse) GetValue() *AlertConfig {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AlertConfigResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type AlertConfigStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TimeRange allows limiting response data to within a specified time window.
	// If this field is populated, at least one of the two time fields are required.
	//
	// For GetAll, the fields start and end can be used as follows:
	//
	//   * end: Returns the state of each AlertConfig at end.
	//     * Each AlertConfig response is fully-specified (all fields set).
	//   * start: Returns the state of each AlertConfig at start, followed by updates until now.
	//     * Each AlertConfig response at start is fully-specified, but updates may be partial.
	//   * start and end: Returns the state of each AlertConfig at start, followed by updates
	//     until end.
	//     * Each AlertConfig response at start is fully-specified, but updates until end may
	//       be partial.
	//
	// This field is not allowed in the Subscribe RPC.
	Time *time.TimeBounds `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AlertConfigStreamRequest) Reset() {
	*x = AlertConfigStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConfigStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConfigStreamRequest) ProtoMessage() {}

func (x *AlertConfigStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConfigStreamRequest.ProtoReflect.Descriptor instead.
func (*AlertConfigStreamRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{6}
}

func (x *AlertConfigStreamRequest) GetTime() *time.TimeBounds {
	if x != nil {
		return x.Time
	}
	return nil
}

type AlertConfigStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value is a value deemed relevant to the initiating request.
	// This structure will always have its key-field populated. Which other fields are
	// populated, and why, depends on the value of Operation and what triggered this notification.
	Value *AlertConfig `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Time holds the timestamp of this AlertConfig's last modification.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Operation indicates how the AlertConfig value in this response should be considered.
	// Under non-subscribe requests, this value should always be INITIAL. In a subscription,
	// once all initial data is streamed and the client begins to receive modification updates,
	// you should not see INITIAL again.
	Type subscriptions.Operation `protobuf:"varint,3,opt,name=type,proto3,enum=arista.subscriptions.Operation" json:"type,omitempty"`
}

func (x *AlertConfigStreamResponse) Reset() {
	*x = AlertConfigStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConfigStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConfigStreamResponse) ProtoMessage() {}

func (x *AlertConfigStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConfigStreamResponse.ProtoReflect.Descriptor instead.
func (*AlertConfigStreamResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{7}
}

func (x *AlertConfigStreamResponse) GetValue() *AlertConfig {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AlertConfigStreamResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AlertConfigStreamResponse) GetType() subscriptions.Operation {
	if x != nil {
		return x.Type
	}
	return subscriptions.Operation_UNSPECIFIED
}

type AlertConfigSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AlertConfig carries the value to set into the datastore.
	// See the documentation on the AlertConfig struct for which fields are required.
	Value *AlertConfig `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AlertConfigSetRequest) Reset() {
	*x = AlertConfigSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConfigSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConfigSetRequest) ProtoMessage() {}

func (x *AlertConfigSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConfigSetRequest.ProtoReflect.Descriptor instead.
func (*AlertConfigSetRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{8}
}

func (x *AlertConfigSetRequest) GetValue() *AlertConfig {
	if x != nil {
		return x.Value
	}
	return nil
}

type AlertConfigSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value carries all the values given in the AlertConfigSetRequest as well
	// as any server-generated values.
	Value *AlertConfig `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Time indicates the (UTC) timestamp at which the system recognizes the
	// creation. The only guarantees made about this timestamp are:
	//
	//    - it is after the time the request was received
	//    - a time-ranged query with StartTime==CreatedAt will include this instance.
	//
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AlertConfigSetResponse) Reset() {
	*x = AlertConfigSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertConfigSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertConfigSetResponse) ProtoMessage() {}

func (x *AlertConfigSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertConfigSetResponse.ProtoReflect.Descriptor instead.
func (*AlertConfigSetResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{9}
}

func (x *AlertConfigSetResponse) GetValue() *AlertConfig {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AlertConfigSetResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type TemplateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key uniquely identifies a TemplateConfig instance to retrieve.
	// This value must be populated.
	Key *TemplateKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Time indicates the time for which you are interested in the data.
	// If no time is given, the server will use the time at which it makes the request.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TemplateConfigRequest) Reset() {
	*x = TemplateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigRequest) ProtoMessage() {}

func (x *TemplateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigRequest.ProtoReflect.Descriptor instead.
func (*TemplateConfigRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{10}
}

func (x *TemplateConfigRequest) GetKey() *TemplateKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TemplateConfigRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type TemplateConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value is the value requested.
	// This structure will be fully-populated as it exists in the datastore. If
	// optional fields were not given at creation, these fields will be empty or
	// set to default values.
	Value *TemplateConfig `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Time carries the (UTC) timestamp of the last-modification of the
	// TemplateConfig instance in this response.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TemplateConfigResponse) Reset() {
	*x = TemplateConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigResponse) ProtoMessage() {}

func (x *TemplateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigResponse.ProtoReflect.Descriptor instead.
func (*TemplateConfigResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{11}
}

func (x *TemplateConfigResponse) GetValue() *TemplateConfig {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TemplateConfigResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type TemplateConfigStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TimeRange allows limiting response data to within a specified time window.
	// If this field is populated, at least one of the two time fields are required.
	//
	// For GetAll, the fields start and end can be used as follows:
	//
	//   * end: Returns the state of each TemplateConfig at end.
	//     * Each TemplateConfig response is fully-specified (all fields set).
	//   * start: Returns the state of each TemplateConfig at start, followed by updates until now.
	//     * Each TemplateConfig response at start is fully-specified, but updates may be partial.
	//   * start and end: Returns the state of each TemplateConfig at start, followed by updates
	//     until end.
	//     * Each TemplateConfig response at start is fully-specified, but updates until end may
	//       be partial.
	//
	// This field is not allowed in the Subscribe RPC.
	Time *time.TimeBounds `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TemplateConfigStreamRequest) Reset() {
	*x = TemplateConfigStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigStreamRequest) ProtoMessage() {}

func (x *TemplateConfigStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigStreamRequest.ProtoReflect.Descriptor instead.
func (*TemplateConfigStreamRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{12}
}

func (x *TemplateConfigStreamRequest) GetTime() *time.TimeBounds {
	if x != nil {
		return x.Time
	}
	return nil
}

type TemplateConfigStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value is a value deemed relevant to the initiating request.
	// This structure will always have its key-field populated. Which other fields are
	// populated, and why, depends on the value of Operation and what triggered this notification.
	Value *TemplateConfig `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Time holds the timestamp of this TemplateConfig's last modification.
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	// Operation indicates how the TemplateConfig value in this response should be considered.
	// Under non-subscribe requests, this value should always be INITIAL. In a subscription,
	// once all initial data is streamed and the client begins to receive modification updates,
	// you should not see INITIAL again.
	Type subscriptions.Operation `protobuf:"varint,3,opt,name=type,proto3,enum=arista.subscriptions.Operation" json:"type,omitempty"`
}

func (x *TemplateConfigStreamResponse) Reset() {
	*x = TemplateConfigStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigStreamResponse) ProtoMessage() {}

func (x *TemplateConfigStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigStreamResponse.ProtoReflect.Descriptor instead.
func (*TemplateConfigStreamResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{13}
}

func (x *TemplateConfigStreamResponse) GetValue() *TemplateConfig {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TemplateConfigStreamResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *TemplateConfigStreamResponse) GetType() subscriptions.Operation {
	if x != nil {
		return x.Type
	}
	return subscriptions.Operation_UNSPECIFIED
}

type TemplateConfigSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TemplateConfig carries the value to set into the datastore.
	// See the documentation on the TemplateConfig struct for which fields are required.
	Value *TemplateConfig `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TemplateConfigSetRequest) Reset() {
	*x = TemplateConfigSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigSetRequest) ProtoMessage() {}

func (x *TemplateConfigSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigSetRequest.ProtoReflect.Descriptor instead.
func (*TemplateConfigSetRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{14}
}

func (x *TemplateConfigSetRequest) GetValue() *TemplateConfig {
	if x != nil {
		return x.Value
	}
	return nil
}

type TemplateConfigSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Value carries all the values given in the TemplateConfigSetRequest as well
	// as any server-generated values.
	Value *TemplateConfig `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Time indicates the (UTC) timestamp at which the system recognizes the
	// creation. The only guarantees made about this timestamp are:
	//
	//    - it is after the time the request was received
	//    - a time-ranged query with StartTime==CreatedAt will include this instance.
	//
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TemplateConfigSetResponse) Reset() {
	*x = TemplateConfigSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigSetResponse) ProtoMessage() {}

func (x *TemplateConfigSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigSetResponse.ProtoReflect.Descriptor instead.
func (*TemplateConfigSetResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{15}
}

func (x *TemplateConfigSetResponse) GetValue() *TemplateConfig {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TemplateConfigSetResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type TemplateConfigSetSomeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value contains a list of TemplateConfig values to write.
	// It is possible to provide more values than can fit within either:
	//     - the maxiumum send size of the client
	//     - the maximum receive size of the server
	// If this error occurs you must reduce the number of values sent.
	// See gRPC "maximum message size" documentation for more information.
	Values []*TemplateConfig `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *TemplateConfigSetSomeRequest) Reset() {
	*x = TemplateConfigSetSomeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigSetSomeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigSetSomeRequest) ProtoMessage() {}

func (x *TemplateConfigSetSomeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigSetSomeRequest.ProtoReflect.Descriptor instead.
func (*TemplateConfigSetSomeRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{16}
}

func (x *TemplateConfigSetSomeRequest) GetValues() []*TemplateConfig {
	if x != nil {
		return x.Values
	}
	return nil
}

type TemplateConfigSetSomeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *TemplateKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Error string       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TemplateConfigSetSomeResponse) Reset() {
	*x = TemplateConfigSetSomeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigSetSomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigSetSomeResponse) ProtoMessage() {}

func (x *TemplateConfigSetSomeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigSetSomeResponse.ProtoReflect.Descriptor instead.
func (*TemplateConfigSetSomeResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{17}
}

func (x *TemplateConfigSetSomeResponse) GetKey() *TemplateKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TemplateConfigSetSomeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TemplateConfigDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key indicates which TemplateConfig instance to remove.
	// This field must always be set.
	Key *TemplateKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *TemplateConfigDeleteRequest) Reset() {
	*x = TemplateConfigDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigDeleteRequest) ProtoMessage() {}

func (x *TemplateConfigDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigDeleteRequest.ProtoReflect.Descriptor instead.
func (*TemplateConfigDeleteRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{18}
}

func (x *TemplateConfigDeleteRequest) GetKey() *TemplateKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type TemplateConfigDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Key echoes back the key of the deleted TemplateConfig instance.
	Key *TemplateKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Time indicates the (UTC) timestamp at which the system recognizes the
	// deletion. The only guarantees made about this timestamp are:
	//
	//    - it is after the time the request was received
	//    - a time-ranged query with StartTime==DeletedAt will not include this instance.
	//
	Time *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TemplateConfigDeleteResponse) Reset() {
	*x = TemplateConfigDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigDeleteResponse) ProtoMessage() {}

func (x *TemplateConfigDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigDeleteResponse.ProtoReflect.Descriptor instead.
func (*TemplateConfigDeleteResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{19}
}

func (x *TemplateConfigDeleteResponse) GetKey() *TemplateKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TemplateConfigDeleteResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type TemplateConfigDeleteAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TemplateConfigDeleteAllRequest) Reset() {
	*x = TemplateConfigDeleteAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigDeleteAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigDeleteAllRequest) ProtoMessage() {}

func (x *TemplateConfigDeleteAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigDeleteAllRequest.ProtoReflect.Descriptor instead.
func (*TemplateConfigDeleteAllRequest) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{20}
}

type TemplateConfigDeleteAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This describes the class of delete error.
	Type fmp.DeleteError `protobuf:"varint,1,opt,name=type,proto3,enum=fmp.DeleteError" json:"type,omitempty"`
	// This indicates the error message from the delete failure.
	Error *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// This is the key of the TemplateConfig instance that failed to be deleted.
	Key *TemplateKey `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// Time indicates the (UTC) timestamp when the key was being deleted.
	Time *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *TemplateConfigDeleteAllResponse) Reset() {
	*x = TemplateConfigDeleteAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arista_alert_v1_services_gen_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateConfigDeleteAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfigDeleteAllResponse) ProtoMessage() {}

func (x *TemplateConfigDeleteAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arista_alert_v1_services_gen_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfigDeleteAllResponse.ProtoReflect.Descriptor instead.
func (*TemplateConfigDeleteAllResponse) Descriptor() ([]byte, []int) {
	return file_arista_alert_v1_services_gen_proto_rawDescGZIP(), []int{21}
}

func (x *TemplateConfigDeleteAllResponse) GetType() fmp.DeleteError {
	if x != nil {
		return x.Type
	}
	return fmp.DeleteError_DELETE_ERROR_UNSPECIFIED
}

func (x *TemplateConfigDeleteAllResponse) GetError() *wrapperspb.StringValue {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TemplateConfigDeleteAllResponse) GetKey() *TemplateKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TemplateConfigDeleteAllResponse) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

var File_arista_alert_v1_services_gen_proto protoreflect.FileDescriptor

var file_arista_alert_v1_services_gen_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x61, 0x72, 0x69, 0x73,
	0x74, 0x61, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x66, 0x6d, 0x70, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x0c, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x0d, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72,
	0x69, 0x73, 0x74, 0x61, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x73, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x13, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x44, 0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x13, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x18, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0xb4, 0x01, 0x0a, 0x19, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61,
	0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x15, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x7c, 0x0a, 0x16, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61,
	0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x77, 0x0a, 0x15, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x16, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x1b, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x73, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x1c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x51, 0x0a, 0x18, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x19, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x1c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65,
	0x74, 0x53, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x1d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4d, 0x0a, 0x1b,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x7e, 0x0a, 0x1c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xdb, 0x01,
	0x0a, 0x1f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x66, 0x6d, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x32, 0xb1, 0x01, 0x0a, 0x0c,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x32,
	0xa7, 0x02, 0x0a, 0x12, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65,
	0x12, 0x23, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x09, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x29, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x56, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xea, 0x05, 0x0a, 0x15, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x12, 0x26, 0x2e,
	0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x2c, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x6a, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x61, 0x72, 0x69,
	0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6a, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x6d, 0x65, 0x12, 0x2d, 0x2e, 0x61,
	0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74,
	0x53, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x72,
	0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x74, 0x53,
	0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x65, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x12, 0x2f, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x61, 0x72, 0x69, 0x73, 0x74, 0x61,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x61, 0x72, 0x69, 0x73, 0x74,
	0x61, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x3b, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_arista_alert_v1_services_gen_proto_rawDescOnce sync.Once
	file_arista_alert_v1_services_gen_proto_rawDescData = file_arista_alert_v1_services_gen_proto_rawDesc
)

func file_arista_alert_v1_services_gen_proto_rawDescGZIP() []byte {
	file_arista_alert_v1_services_gen_proto_rawDescOnce.Do(func() {
		file_arista_alert_v1_services_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_arista_alert_v1_services_gen_proto_rawDescData)
	})
	return file_arista_alert_v1_services_gen_proto_rawDescData
}

var file_arista_alert_v1_services_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_arista_alert_v1_services_gen_proto_goTypes = []interface{}{
	(*AlertRequest)(nil),                    // 0: arista.alert.v1.AlertRequest
	(*AlertResponse)(nil),                   // 1: arista.alert.v1.AlertResponse
	(*AlertStreamRequest)(nil),              // 2: arista.alert.v1.AlertStreamRequest
	(*AlertStreamResponse)(nil),             // 3: arista.alert.v1.AlertStreamResponse
	(*AlertConfigRequest)(nil),              // 4: arista.alert.v1.AlertConfigRequest
	(*AlertConfigResponse)(nil),             // 5: arista.alert.v1.AlertConfigResponse
	(*AlertConfigStreamRequest)(nil),        // 6: arista.alert.v1.AlertConfigStreamRequest
	(*AlertConfigStreamResponse)(nil),       // 7: arista.alert.v1.AlertConfigStreamResponse
	(*AlertConfigSetRequest)(nil),           // 8: arista.alert.v1.AlertConfigSetRequest
	(*AlertConfigSetResponse)(nil),          // 9: arista.alert.v1.AlertConfigSetResponse
	(*TemplateConfigRequest)(nil),           // 10: arista.alert.v1.TemplateConfigRequest
	(*TemplateConfigResponse)(nil),          // 11: arista.alert.v1.TemplateConfigResponse
	(*TemplateConfigStreamRequest)(nil),     // 12: arista.alert.v1.TemplateConfigStreamRequest
	(*TemplateConfigStreamResponse)(nil),    // 13: arista.alert.v1.TemplateConfigStreamResponse
	(*TemplateConfigSetRequest)(nil),        // 14: arista.alert.v1.TemplateConfigSetRequest
	(*TemplateConfigSetResponse)(nil),       // 15: arista.alert.v1.TemplateConfigSetResponse
	(*TemplateConfigSetSomeRequest)(nil),    // 16: arista.alert.v1.TemplateConfigSetSomeRequest
	(*TemplateConfigSetSomeResponse)(nil),   // 17: arista.alert.v1.TemplateConfigSetSomeResponse
	(*TemplateConfigDeleteRequest)(nil),     // 18: arista.alert.v1.TemplateConfigDeleteRequest
	(*TemplateConfigDeleteResponse)(nil),    // 19: arista.alert.v1.TemplateConfigDeleteResponse
	(*TemplateConfigDeleteAllRequest)(nil),  // 20: arista.alert.v1.TemplateConfigDeleteAllRequest
	(*TemplateConfigDeleteAllResponse)(nil), // 21: arista.alert.v1.TemplateConfigDeleteAllResponse
	(*timestamppb.Timestamp)(nil),           // 22: google.protobuf.Timestamp
	(*Alert)(nil),                           // 23: arista.alert.v1.Alert
	(*time.TimeBounds)(nil),                 // 24: arista.time.TimeBounds
	(subscriptions.Operation)(0),            // 25: arista.subscriptions.Operation
	(*AlertConfig)(nil),                     // 26: arista.alert.v1.AlertConfig
	(*TemplateKey)(nil),                     // 27: arista.alert.v1.TemplateKey
	(*TemplateConfig)(nil),                  // 28: arista.alert.v1.TemplateConfig
	(fmp.DeleteError)(0),                    // 29: fmp.DeleteError
	(*wrapperspb.StringValue)(nil),          // 30: google.protobuf.StringValue
}
var file_arista_alert_v1_services_gen_proto_depIdxs = []int32{
	22, // 0: arista.alert.v1.AlertRequest.time:type_name -> google.protobuf.Timestamp
	23, // 1: arista.alert.v1.AlertResponse.value:type_name -> arista.alert.v1.Alert
	22, // 2: arista.alert.v1.AlertResponse.time:type_name -> google.protobuf.Timestamp
	24, // 3: arista.alert.v1.AlertStreamRequest.time:type_name -> arista.time.TimeBounds
	23, // 4: arista.alert.v1.AlertStreamResponse.value:type_name -> arista.alert.v1.Alert
	22, // 5: arista.alert.v1.AlertStreamResponse.time:type_name -> google.protobuf.Timestamp
	25, // 6: arista.alert.v1.AlertStreamResponse.type:type_name -> arista.subscriptions.Operation
	22, // 7: arista.alert.v1.AlertConfigRequest.time:type_name -> google.protobuf.Timestamp
	26, // 8: arista.alert.v1.AlertConfigResponse.value:type_name -> arista.alert.v1.AlertConfig
	22, // 9: arista.alert.v1.AlertConfigResponse.time:type_name -> google.protobuf.Timestamp
	24, // 10: arista.alert.v1.AlertConfigStreamRequest.time:type_name -> arista.time.TimeBounds
	26, // 11: arista.alert.v1.AlertConfigStreamResponse.value:type_name -> arista.alert.v1.AlertConfig
	22, // 12: arista.alert.v1.AlertConfigStreamResponse.time:type_name -> google.protobuf.Timestamp
	25, // 13: arista.alert.v1.AlertConfigStreamResponse.type:type_name -> arista.subscriptions.Operation
	26, // 14: arista.alert.v1.AlertConfigSetRequest.value:type_name -> arista.alert.v1.AlertConfig
	26, // 15: arista.alert.v1.AlertConfigSetResponse.value:type_name -> arista.alert.v1.AlertConfig
	22, // 16: arista.alert.v1.AlertConfigSetResponse.time:type_name -> google.protobuf.Timestamp
	27, // 17: arista.alert.v1.TemplateConfigRequest.key:type_name -> arista.alert.v1.TemplateKey
	22, // 18: arista.alert.v1.TemplateConfigRequest.time:type_name -> google.protobuf.Timestamp
	28, // 19: arista.alert.v1.TemplateConfigResponse.value:type_name -> arista.alert.v1.TemplateConfig
	22, // 20: arista.alert.v1.TemplateConfigResponse.time:type_name -> google.protobuf.Timestamp
	24, // 21: arista.alert.v1.TemplateConfigStreamRequest.time:type_name -> arista.time.TimeBounds
	28, // 22: arista.alert.v1.TemplateConfigStreamResponse.value:type_name -> arista.alert.v1.TemplateConfig
	22, // 23: arista.alert.v1.TemplateConfigStreamResponse.time:type_name -> google.protobuf.Timestamp
	25, // 24: arista.alert.v1.TemplateConfigStreamResponse.type:type_name -> arista.subscriptions.Operation
	28, // 25: arista.alert.v1.TemplateConfigSetRequest.value:type_name -> arista.alert.v1.TemplateConfig
	28, // 26: arista.alert.v1.TemplateConfigSetResponse.value:type_name -> arista.alert.v1.TemplateConfig
	22, // 27: arista.alert.v1.TemplateConfigSetResponse.time:type_name -> google.protobuf.Timestamp
	28, // 28: arista.alert.v1.TemplateConfigSetSomeRequest.values:type_name -> arista.alert.v1.TemplateConfig
	27, // 29: arista.alert.v1.TemplateConfigSetSomeResponse.key:type_name -> arista.alert.v1.TemplateKey
	27, // 30: arista.alert.v1.TemplateConfigDeleteRequest.key:type_name -> arista.alert.v1.TemplateKey
	27, // 31: arista.alert.v1.TemplateConfigDeleteResponse.key:type_name -> arista.alert.v1.TemplateKey
	22, // 32: arista.alert.v1.TemplateConfigDeleteResponse.time:type_name -> google.protobuf.Timestamp
	29, // 33: arista.alert.v1.TemplateConfigDeleteAllResponse.type:type_name -> fmp.DeleteError
	30, // 34: arista.alert.v1.TemplateConfigDeleteAllResponse.error:type_name -> google.protobuf.StringValue
	27, // 35: arista.alert.v1.TemplateConfigDeleteAllResponse.key:type_name -> arista.alert.v1.TemplateKey
	22, // 36: arista.alert.v1.TemplateConfigDeleteAllResponse.time:type_name -> google.protobuf.Timestamp
	0,  // 37: arista.alert.v1.AlertService.GetOne:input_type -> arista.alert.v1.AlertRequest
	2,  // 38: arista.alert.v1.AlertService.Subscribe:input_type -> arista.alert.v1.AlertStreamRequest
	4,  // 39: arista.alert.v1.AlertConfigService.GetOne:input_type -> arista.alert.v1.AlertConfigRequest
	6,  // 40: arista.alert.v1.AlertConfigService.Subscribe:input_type -> arista.alert.v1.AlertConfigStreamRequest
	8,  // 41: arista.alert.v1.AlertConfigService.Set:input_type -> arista.alert.v1.AlertConfigSetRequest
	10, // 42: arista.alert.v1.TemplateConfigService.GetOne:input_type -> arista.alert.v1.TemplateConfigRequest
	12, // 43: arista.alert.v1.TemplateConfigService.GetAll:input_type -> arista.alert.v1.TemplateConfigStreamRequest
	12, // 44: arista.alert.v1.TemplateConfigService.Subscribe:input_type -> arista.alert.v1.TemplateConfigStreamRequest
	14, // 45: arista.alert.v1.TemplateConfigService.Set:input_type -> arista.alert.v1.TemplateConfigSetRequest
	16, // 46: arista.alert.v1.TemplateConfigService.SetSome:input_type -> arista.alert.v1.TemplateConfigSetSomeRequest
	18, // 47: arista.alert.v1.TemplateConfigService.Delete:input_type -> arista.alert.v1.TemplateConfigDeleteRequest
	20, // 48: arista.alert.v1.TemplateConfigService.DeleteAll:input_type -> arista.alert.v1.TemplateConfigDeleteAllRequest
	1,  // 49: arista.alert.v1.AlertService.GetOne:output_type -> arista.alert.v1.AlertResponse
	3,  // 50: arista.alert.v1.AlertService.Subscribe:output_type -> arista.alert.v1.AlertStreamResponse
	5,  // 51: arista.alert.v1.AlertConfigService.GetOne:output_type -> arista.alert.v1.AlertConfigResponse
	7,  // 52: arista.alert.v1.AlertConfigService.Subscribe:output_type -> arista.alert.v1.AlertConfigStreamResponse
	9,  // 53: arista.alert.v1.AlertConfigService.Set:output_type -> arista.alert.v1.AlertConfigSetResponse
	11, // 54: arista.alert.v1.TemplateConfigService.GetOne:output_type -> arista.alert.v1.TemplateConfigResponse
	13, // 55: arista.alert.v1.TemplateConfigService.GetAll:output_type -> arista.alert.v1.TemplateConfigStreamResponse
	13, // 56: arista.alert.v1.TemplateConfigService.Subscribe:output_type -> arista.alert.v1.TemplateConfigStreamResponse
	15, // 57: arista.alert.v1.TemplateConfigService.Set:output_type -> arista.alert.v1.TemplateConfigSetResponse
	17, // 58: arista.alert.v1.TemplateConfigService.SetSome:output_type -> arista.alert.v1.TemplateConfigSetSomeResponse
	19, // 59: arista.alert.v1.TemplateConfigService.Delete:output_type -> arista.alert.v1.TemplateConfigDeleteResponse
	21, // 60: arista.alert.v1.TemplateConfigService.DeleteAll:output_type -> arista.alert.v1.TemplateConfigDeleteAllResponse
	49, // [49:61] is the sub-list for method output_type
	37, // [37:49] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_arista_alert_v1_services_gen_proto_init() }
func file_arista_alert_v1_services_gen_proto_init() {
	if File_arista_alert_v1_services_gen_proto != nil {
		return
	}
	file_arista_alert_v1_alert_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_arista_alert_v1_services_gen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConfigStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConfigStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConfigSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertConfigSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigSetSomeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigSetSomeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigDeleteAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arista_alert_v1_services_gen_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateConfigDeleteAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_arista_alert_v1_services_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_arista_alert_v1_services_gen_proto_goTypes,
		DependencyIndexes: file_arista_alert_v1_services_gen_proto_depIdxs,
		MessageInfos:      file_arista_alert_v1_services_gen_proto_msgTypes,
	}.Build()
	File_arista_alert_v1_services_gen_proto = out.File
	file_arista_alert_v1_services_gen_proto_rawDesc = nil
	file_arista_alert_v1_services_gen_proto_goTypes = nil
	file_arista_alert_v1_services_gen_proto_depIdxs = nil
}

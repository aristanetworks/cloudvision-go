---
# ----------------------------------------------------------------------------------
# Install Packages
# ----------------------------------------------------------------------------------

- name: "Install telegraf"
  yum:
      name: telegraf-Linux
      state: installed

- name: "Install AroraConfig-dist-swift RPM"
  yum:
      name: AroraConfig-dist-swift
      state: installed

- name: "Install AroraConfig-buildcache RPM"
  yum:
      name: AroraConfig-buildcache 
      state: installed

- name: "Install AroraConfig-tools"
  yum:
      name: AroraConfig-tools
      state: installed


# ----------------------------------------------------------------------------------
# Remove Unneeded Packages
# ----------------------------------------------------------------------------------

- name: "Remove AroraConfig-bs, if installed"
  yum: 
      name: AroraConfig-bs
      state: absent

- name: "Remove AroraConfig-projectReplicas, if installed"
  yum: 
      name: AroraConfig-projectReplicas
      state: absent

- name: "Remove AroraConfig-arsched, if installed"
  yum:
      name: AroraConfig-arsched
      state: absent

- name: "Remove KernelDevTools, if installed"
  yum:
      name: KernelDevTools
      state: absent

- name: "Remove Alphanet, if installed"
  yum:
      name: Alphanet
      state: absent

- name: "Remove AroraWeb-bs, if installed"
  yum:
      name: AroraWeb-bs
      state: absent

- name: "Remove AroraWeb-logging, if installed"
  yum:
      name: AroraWeb-logging
      state: absent

- name: "Remove Artools-mock, if installed"
  yum:
      name: Artools-mock
      state: absent


# ----------------------------------------------------------------------------------
# Sysctl Changes
# ----------------------------------------------------------------------------------

- name: "Set maximum RAID sync speed"
  sysctl:
      name: dev.raid.speed_limit_max
      value: 100000
      state: present
      sysctl_set: yes
      reload: yes
      sysctl_file: "/etc/sysctl.d/{{ROLE_NAME}}.conf"

- name: "Set minimum RAID sync speed"
  sysctl:
      name: dev.raid.speed_limit_min
      value: 1000
      state: present
      sysctl_set: yes
      reload: yes
      sysctl_file: "/etc/sysctl.d/{{ROLE_NAME}}.conf"

- name: "Set how frequently kernel flusher will wake up to flush data"
  sysctl:
      name: vm.dirty_writeback_centisecs
      value: 48000
      state: present
      sysctl_set: yes
      reload: yes
      sysctl_file: "/etc/sysctl.d/{{ROLE_NAME}}.conf"

- name: "Set how old dirty data has to be flushed next time it is flushed"
  sysctl:
      name: vm.dirty_expire_centisecs
      value: 96000
      state: present
      sysctl_set: yes
      reload: yes
      sysctl_file: "/etc/sysctl.d/{{ROLE_NAME}}.conf"

- name: "Set lower bound percentage for available memory before dirty data is flushed by background kernel flusher"
  sysctl:
      name: vm.dirty_background_ratio
      value: 40
      state: present
      sysctl_set: yes
      reload: yes
      sysctl_file: "/etc/sysctl.d/{{ROLE_NAME}}.conf"

- name: "Set lower bound percentage of available memory at which the process writing data will flush data iself"
  sysctl:
      name: vm.dirty_ratio
      value: 50
      state: present
      sysctl_set: yes
      reload: yes
      sysctl_file: "/etc/sysctl.d/{{ROLE_NAME}}.conf"


# ----------------------------------------------------------------------------------
# Create Required Symlinks
# ----------------------------------------------------------------------------------

- name: "Create symlink to /dist/storage/Aeris from /dist/Aeris"
  file:
      src: /dist/storage/Aeris
      dest: /dist/Aeris
      state: link
      force: yes

- name: "Create symlink to /dist/storage/CoreOS/ from /dist/CoreOS"
  file:
      src: /dist/storage/CoreOS/
      dest: /dist/CoreOS
      state: link
      force: yes

- name: "Create symlink to /dist/storage/Docker/ from /dist/Docker"
  file:
      src: /dist/storage/Docker/
      dest: /dist/Docker
      state: link
      force: yes


- name: "Create symlink to /dist/storage/Kubernetes/ from /dist/Kubernetes"
  file:
      src: /dist/storage/Kubernetes/
      dest: /dist/Kubernetes
      state: link
      force: yes

- name: "Create symlink to /dist/storage/ToolsV2/ from /dist/ToolsV2"
  file:
      src: /dist/storage/ToolsV2/
      dest: /dist/ToolsV2
      state: link
      force: yes

- name: "Create symlink to /dist/storage/ops from /dist/ops"
  file:
      src: /dist/storage/ops
      dest: /dist/ops
      state: link
      force: yes


# ----------------------------------------------------------------------------------
# /etc/Arora.cfg
# ----------------------------------------------------------------------------------

- name: "Enable this server to be dist to enable cron job /etc/cron.d/UpdateDist"
  replace:
      dest: /etc/Arora.cfg
      regexp: "is_dist=0"
      replace: "is_dist=1"

- name: "Disable stests from /etc/Arora.cfg"
  replace:
      dest: /etc/Arora.cfg
      regexp: "enabled = True"
      replace: "enabled = False"


# ----------------------------------------------------------------------------------
# /etc/httpd/conf.d/BuildCache.conf         
# ----------------------------------------------------------------------------------

- name: "Enable this server to be dist to enable cron job /etc/cron.d/UpdateDist"
  replace:
      dest: /etc/httpd/conf.d/BuildCache.conf
      regexp: "PythonOption BlobCachePath /buildcache"
      replace: "#PythonOption BlobCachePath /buildcache"


# ----------------------------------------------------------------------------------
# /etc/fstab
# ----------------------------------------------------------------------------------

- name: "Create bind mount for /dist in /persist2"
  lineinfile:
      dest: "/etc/fstab"
      line: "/dist /persist2/dist none bind 0 0"
      insertafter: EOF
      state: present

- name: "Change ownership of /dist/Abuild"
  file:
      path: /dist/Abuild
      owner: arastra
      group: arastra

- name: "Change ownership of /dist/httpd-cache"
  file:
     path: /dist/httpd-cache
     owner: apache
     group: apache


# ----------------------------------------------------------------------------------
# /etc/httpd/conf.d/server-status.conf
# ----------------------------------------------------------------------------------

- name: "Create destination for server-status.conf it it doesn't exist"
  file:
      path: /etc/httpd/conf.d/
      state: directory
      mode: 0755

- name: "Install server-status.conf to /etc/httpd/conf.d"
  copy:
      src: "{{STAGES_PATH}}/config_conf/server-status.conf"
      dest: "/etc/httpd/conf.d/server-status.conf"

# ----------------------------------------------------------------------------------
# /etc/httpd/conf.d/dist_swift.conf
# ----------------------------------------------------------------------------------

- name: "Install dist_swift.conf to /etc/httpd/conf.d"
  copy:
      src: "{{STAGES_PATH}}/config_conf/dist_swift.conf"
      dest: "/etc/httpd/conf.d/dist_swift.conf"


# ----------------------------------------------------------------------------------
# /etc/cron.d/dist_swift
# ----------------------------------------------------------------------------------

- name: "Install dist_swift to /etc/cron.d"
  copy:
      src: "{{STAGES_PATH}}/config_conf/dist_swift.cron"
      dest: "/etc/cron.d/dist_swift"


# ----------------------------------------------------------------------------------
# /etc/logrotate.d/httpd
# ----------------------------------------------------------------------------------

- name: "Install httpd to /etc/logrotate.d/httpd"
  copy:
      src: "{{STAGES_PATH}}/config_conf/logrotate.d.httpd"
      dest: "/etc/logrotate.d/httpd"


# ----------------------------------------------------------------------------------
# Misc 
# ----------------------------------------------------------------------------------

- name: "Make sure vmstat is running"
  shell: "/sbin/chkconfig --add vmstat"
  ignore_errors: yes

- name: "Setup serial console"
  shell: "/usr/sbin/SetupAroraSerial"

- name: "Add server to arventory"
  shell: arventory update

- name: "Update datacenter.servers with status configuration ready"
  command: "{{ASB_DB_UPDATE_VERIFY}}"

- name: "Reboot"
  command: "reboot"
...

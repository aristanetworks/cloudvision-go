---
- name: "Find SCSI disks from ansible devices"
  set_fact:
    disks: "{{ disks | default([])  + [ item ] }}"
  when: item | match("sd.*")
  with_items: "{{ ansible_devices.keys() }}"

- fail: msg="Could not find any disks."
  when: disks is not defined or disks | length == 0

- name: "Collect SMART records for each disk for given repair status"
  shell: "smartctl -a /dev/{{item}} >> /root/SMART_{{STATUS}}_{{ansible_hostname}}_{{item}}"
  with_items: "{{disks}}"
  ignore_errors: yes

- name: "Send each SMART data to Ansible VM"
  shell: " export HISTCONTROL=ignorespace && sshpass -p arastra scp -o StrictHostKeyChecking=no /root/SMART_{{STATUS}}* root@ansible:/var/log/ASBTrigger/repair-hosts/"
  ignore_errors: yes

- name: "Clean up SMART files"
  shell: "rm /root/SMART_{{STATUS}}*"
...
